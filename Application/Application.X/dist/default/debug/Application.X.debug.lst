

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 24 15:21:55 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22   000000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F46K20 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   0015BE                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _port_registers
    63   0015BE  80                 	db	128
    64   0015BF  0F                 	db	15
    65   0015C0  81                 	db	129
    66   0015C1  0F                 	db	15
    67   0015C2  82                 	db	130
    68   0015C3  0F                 	db	15
    69   0015C4  83                 	db	131
    70   0015C5  0F                 	db	15
    71   0015C6  84                 	db	132
    72   0015C7  0F                 	db	15
    73                           
    74                           ;initializer for _tris_registers
    75   0015C8  92                 	db	146
    76   0015C9  0F                 	db	15
    77   0015CA  93                 	db	147
    78   0015CB  0F                 	db	15
    79   0015CC  94                 	db	148
    80   0015CD  0F                 	db	15
    81   0015CE  95                 	db	149
    82   0015CF  0F                 	db	15
    83   0015D0  96                 	db	150
    84   0015D1  0F                 	db	15
    85                           
    86                           ;initializer for _lat_registers
    87   0015D2  89                 	db	137
    88   0015D3  0F                 	db	15
    89   0015D4  8A                 	db	138
    90   0015D5  0F                 	db	15
    91   0015D6  8B                 	db	139
    92   0015D7  0F                 	db	15
    93   0015D8  8C                 	db	140
    94   0015D9  0F                 	db	15
    95   0015DA  8D                 	db	141
    96   0015DB  0F                 	db	15
    97                           
    98                           ;initializer for _dc_motor_2
    99   0015DC  22                 	db	34
   100   0015DD  32                 	db	50
   101                           
   102                           ;initializer for _dc_motor_1
   103   0015DE  02                 	db	2
   104   0015DF  12                 	db	18
   105                           
   106                           ;initializer for _relay2
   107   0015E0  12                 	db	18
   108                           
   109                           ;initializer for _relay1
   110   0015E1  02                 	db	2
   111   000000                     _PORTA	set	3968
   112   000000                     _LATA	set	3977
   113   000000                     _TRISA	set	3986
   114   000000                     _LATE	set	3981
   115   000000                     _LATD	set	3980
   116   000000                     _LATC	set	3979
   117   000000                     _LATB	set	3978
   118   000000                     _TRISE	set	3990
   119   000000                     _TRISD	set	3989
   120   000000                     _TRISC	set	3988
   121   000000                     _TRISB	set	3987
   122   000000                     _PORTE	set	3972
   123   000000                     _PORTD	set	3971
   124   000000                     _PORTC	set	3970
   125   000000                     _PORTB	set	3969
   126                           
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130   001588                     __pcinit:
   131                           	callstack 0
   132   001588                     start_initialization:
   133                           	callstack 0
   134   001588                     __initialization:
   135                           	callstack 0
   136                           
   137                           ; Initialize objects allocated to COMRAM (36 bytes)
   138                           ; load TBLPTR registers with __pidataCOMRAM
   139   001588  0EBE               	movlw	low __pidataCOMRAM
   140   00158A  6EF6               	movwf	tblptrl,c
   141   00158C  0E15               	movlw	high __pidataCOMRAM
   142   00158E  6EF7               	movwf	tblptrh,c
   143   001590  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   144   001592  6EF8               	movwf	tblptru,c
   145   001594  EE00  F001         	lfsr	0,__pdataCOMRAM
   146   001598  EE10 F024          	lfsr	1,36
   147   00159C                     copy_data0:
   148   00159C  0009               	tblrd		*+
   149   00159E  CFF5 FFEE          	movff	tablat,postinc0
   150   0015A2  50E5               	movf	postdec1,w,c
   151   0015A4  50E1               	movf	fsr1l,w,c
   152   0015A6  E1FA               	bnz	copy_data0
   153                           
   154                           ; Clear objects allocated to COMRAM (16 bytes)
   155   0015A8  EE00  F036         	lfsr	0,__pbssCOMRAM
   156   0015AC  0E10               	movlw	16
   157   0015AE                     clear_0:
   158   0015AE  6AEE               	clrf	postinc0,c
   159   0015B0  06E8               	decf	wreg,f,c
   160   0015B2  E1FD               	bnz	clear_0
   161   0015B4                     end_of_initialization:
   162                           	callstack 0
   163   0015B4                     __end_of__initialization:
   164                           	callstack 0
   165   0015B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166   0015B6  6EF8               	movwf	tblptru,c
   167   0015B8  0100               	movlb	0
   168   0015BA  EFBE  F008         	goto	_main	;jump to C main() function
   169                           
   170                           	psect	bssCOMRAM
   171   000036                     __pbssCOMRAM:
   172                           	callstack 0
   173   000036                     button_read_state@btn_low_valid:
   174                           	callstack 0
   175   000036                     	ds	2
   176   000038                     button_read_state@btn_high_valid:
   177                           	callstack 0
   178   000038                     	ds	2
   179   00003A                     relay_turn_off@F3160:
   180                           	callstack 0
   181   00003A                     	ds	1
   182   00003B                     relay_turn_on@F3155:
   183                           	callstack 0
   184   00003B                     	ds	1
   185   00003C                     relay_initialize@F3150:
   186                           	callstack 0
   187   00003C                     	ds	1
   188   00003D                     led_toggle@F3175:
   189                           	callstack 0
   190   00003D                     	ds	1
   191   00003E                     led_turn_off@F3170:
   192                           	callstack 0
   193   00003E                     	ds	1
   194   00003F                     led_turn_on@F3165:
   195                           	callstack 0
   196   00003F                     	ds	1
   197   000040                     led_intitialize@F3160:
   198                           	callstack 0
   199   000040                     	ds	1
   200   000041                     turn_on_leds@_POS:
   201                           	callstack 0
   202   000041                     	ds	1
   203   000042                     btn_high_magic_button@led_status:
   204                           	callstack 0
   205   000042                     	ds	1
   206   000043                     btn_high_magic_button@btn_high_last_valid_status:
   207                           	callstack 0
   208   000043                     	ds	1
   209   000044                     _motor_pin2:
   210                           	callstack 0
   211   000044                     	ds	1
   212   000045                     _motor_pin1:
   213                           	callstack 0
   214   000045                     	ds	1
   215                           
   216                           	psect	dataCOMRAM
   217   000001                     __pdataCOMRAM:
   218                           	callstack 0
   219   000001                     _port_registers:
   220                           	callstack 0
   221   000001                     	ds	10
   222   00000B                     _tris_registers:
   223                           	callstack 0
   224   00000B                     	ds	10
   225   000015                     _lat_registers:
   226                           	callstack 0
   227   000015                     	ds	10
   228   00001F                     _dc_motor_2:
   229                           	callstack 0
   230   00001F                     	ds	2
   231   000021                     _dc_motor_1:
   232                           	callstack 0
   233   000021                     	ds	2
   234   000023                     _relay2:
   235                           	callstack 0
   236   000023                     	ds	1
   237   000024                     _relay1:
   238                           	callstack 0
   239   000024                     	ds	1
   240                           
   241                           	psect	cstackCOMRAM
   242   000025                     __pcstackCOMRAM:
   243                           	callstack 0
   244   000025                     gpio_pin_direction_initialize@_pin_config_t:
   245                           	callstack 0
   246   000025                     gpio_pin_write_logic@_pin_config_t:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0x0
   250   000025                     	ds	1
   251   000026                     ??_gpio_pin_direction_initialize:
   252   000026                     gpio_pin_write_logic@logic:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x1
   256   000026                     	ds	1
   257   000027                     ??_gpio_pin_write_logic:
   258                           
   259                           ; 1 bytes @ 0x2
   260   000027                     	ds	4
   261   00002B                     gpio_pin_direction_initialize@ret:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x6
   265   00002B                     	ds	1
   266   00002C                     gpio_pin_write_logic@ret:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x7
   270   00002C                     	ds	1
   271   00002D                     dc_motor_move_forward@dc_motor:
   272                           	callstack 0
   273   00002D                     dc_motor_move_backward@dc_motor:
   274                           	callstack 0
   275   00002D                     dc_motor_stop@dc_motor:
   276                           	callstack 0
   277   00002D                     gpio_pin_initialize@_pin_config_t:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x8
   281   00002D                     	ds	1
   282   00002E                     ??_gpio_pin_initialize:
   283   00002E                     dc_motor_move_forward@ret:
   284                           	callstack 0
   285   00002E                     dc_motor_move_backward@ret:
   286                           	callstack 0
   287   00002E                     dc_motor_stop@ret:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x9
   291   00002E                     	ds	1
   292   00002F                     dc_motor_initialize@dc_motor:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0xA
   296   00002F                     	ds	1
   297   000030                     ??_dc_motor_initialize:
   298                           
   299                           ; 1 bytes @ 0xB
   300   000030                     	ds	1
   301   000031                     dc_motor_initialize@ret:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0xC
   305   000031                     	ds	1
   306   000032                     application_initialize@ret:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xD
   310   000032                     	ds	1
   311   000033                     ??_main:
   312                           
   313                           ; 1 bytes @ 0xE
   314   000033                     	ds	2
   315   000035                     main@ret:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x10
   319   000035                     	ds	1
   320                           
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 28 in file "app.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;  ret             1   16[COMRAM] unsigned char 
   331 ;; Return value:  Size  Location     Type
   332 ;;                  2  287[None  ] int 
   333 ;; Registers used:
   334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   343 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   344 ;;Total ram usage:        3 bytes
   345 ;; Hardware stack levels required when called: 4
   346 ;; This function calls:
   347 ;;		_application_initialize
   348 ;;		_dc_motor_move_backward
   349 ;;		_dc_motor_move_forward
   350 ;;		_dc_motor_stop
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text0
   357   00117C                     __ptext0:
   358                           	callstack 0
   359   00117C                     _main:
   360                           	callstack 27
   361   00117C                     
   362                           ;app.c: 30:     Std_ReturnType ret = application_initialize();
   363   00117C  ECF1  F00A         	call	_application_initialize	;wreg free
   364   001180  6E35               	movwf	main@ret^0,c
   365   001182                     
   366                           ;app.c: 31:     if ((Std_ReturnType)0x01u == ret)
   367   001182  0435               	decf	main@ret^0,w,c
   368   001184  A4D8               	btfss	status,2,c
   369   001186  EFC7  F008         	goto	u1141
   370   00118A  EFC9  F008         	goto	u1140
   371   00118E                     u1141:
   372   00118E  EFCB  F008         	goto	l1737
   373   001192                     u1140:
   374   001192  EF51  F009         	goto	l289
   375   001196                     l1737:
   376                           
   377                           ;app.c: 36:     {;app.c: 37:         ret = dc_motor_move_forward(&dc_motor_1);
   378   001196  0E21               	movlw	low _dc_motor_1
   379   001198  6E2D               	movwf	dc_motor_move_forward@dc_motor^0,c
   380   00119A  EC8C  F00A         	call	_dc_motor_move_forward	;wreg free
   381   00119E  6E35               	movwf	main@ret^0,c
   382                           
   383                           ;app.c: 38:         ret = dc_motor_move_forward(&dc_motor_2);
   384   0011A0  0E1F               	movlw	low _dc_motor_2
   385   0011A2  6E2D               	movwf	dc_motor_move_forward@dc_motor^0,c
   386   0011A4  EC8C  F00A         	call	_dc_motor_move_forward	;wreg free
   387   0011A8  6E35               	movwf	main@ret^0,c
   388   0011AA                     
   389                           ;app.c: 39:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   390   0011AA  0E1F               	movlw	31
   391   0011AC  6E34               	movwf	(??_main+1)^0,c
   392   0011AE  0E71               	movlw	113
   393   0011B0  6E33               	movwf	??_main^0,c
   394   0011B2  0E1E               	movlw	30
   395   0011B4                     u1167:
   396   0011B4  2EE8               	decfsz	wreg,f,c
   397   0011B6  D7FE               	bra	u1167
   398   0011B8  2E33               	decfsz	??_main^0,f,c
   399   0011BA  D7FC               	bra	u1167
   400   0011BC  2E34               	decfsz	(??_main+1)^0,f,c
   401   0011BE  D7FA               	bra	u1167
   402   0011C0  F000 F000          	nop2	
   403   0011C4  0E21               	movlw	low _dc_motor_1
   404   0011C6  6E2D               	movwf	dc_motor_move_backward@dc_motor^0,c
   405   0011C8  ECA8  F00A         	call	_dc_motor_move_backward	;wreg free
   406   0011CC  0E1F               	movlw	low _dc_motor_2
   407   0011CE  6E2D               	movwf	dc_motor_move_backward@dc_motor^0,c
   408   0011D0  ECA8  F00A         	call	_dc_motor_move_backward	;wreg free
   409   0011D4                     
   410                           ;app.c: 42:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   411   0011D4  0E1F               	movlw	31
   412   0011D6  6E34               	movwf	(??_main+1)^0,c
   413   0011D8  0E71               	movlw	113
   414   0011DA  6E33               	movwf	??_main^0,c
   415   0011DC  0E1E               	movlw	30
   416   0011DE                     u1177:
   417   0011DE  2EE8               	decfsz	wreg,f,c
   418   0011E0  D7FE               	bra	u1177
   419   0011E2  2E33               	decfsz	??_main^0,f,c
   420   0011E4  D7FC               	bra	u1177
   421   0011E6  2E34               	decfsz	(??_main+1)^0,f,c
   422   0011E8  D7FA               	bra	u1177
   423   0011EA  F000 F000          	nop2	
   424                           
   425                           ;app.c: 43:         ret = dc_motor_stop(&dc_motor_1);
   426   0011EE  0E21               	movlw	low _dc_motor_1
   427   0011F0  6E2D               	movwf	dc_motor_stop@dc_motor^0,c
   428   0011F2  EC70  F00A         	call	_dc_motor_stop	;wreg free
   429   0011F6  6E35               	movwf	main@ret^0,c
   430                           
   431                           ;app.c: 44:         ret = dc_motor_stop(&dc_motor_2);
   432   0011F8  0E1F               	movlw	low _dc_motor_2
   433   0011FA  6E2D               	movwf	dc_motor_stop@dc_motor^0,c
   434   0011FC  EC70  F00A         	call	_dc_motor_stop	;wreg free
   435   001200  6E35               	movwf	main@ret^0,c
   436   001202                     
   437                           ;app.c: 45:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   438   001202  0E1F               	movlw	31
   439   001204  6E34               	movwf	(??_main+1)^0,c
   440   001206  0E71               	movlw	113
   441   001208  6E33               	movwf	??_main^0,c
   442   00120A  0E1E               	movlw	30
   443   00120C                     u1187:
   444   00120C  2EE8               	decfsz	wreg,f,c
   445   00120E  D7FE               	bra	u1187
   446   001210  2E33               	decfsz	??_main^0,f,c
   447   001212  D7FC               	bra	u1187
   448   001214  2E34               	decfsz	(??_main+1)^0,f,c
   449   001216  D7FA               	bra	u1187
   450   001218  F000 F000          	nop2	
   451   00121C  0E21               	movlw	low _dc_motor_1
   452   00121E  6E2D               	movwf	dc_motor_move_forward@dc_motor^0,c
   453   001220  EC8C  F00A         	call	_dc_motor_move_forward	;wreg free
   454   001224  0E1F               	movlw	low _dc_motor_2
   455   001226  6E2D               	movwf	dc_motor_move_backward@dc_motor^0,c
   456   001228  ECA8  F00A         	call	_dc_motor_move_backward	;wreg free
   457   00122C                     
   458                           ;app.c: 48:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   459   00122C  0E1F               	movlw	31
   460   00122E  6E34               	movwf	(??_main+1)^0,c
   461   001230  0E71               	movlw	113
   462   001232  6E33               	movwf	??_main^0,c
   463   001234  0E1E               	movlw	30
   464   001236                     u1197:
   465   001236  2EE8               	decfsz	wreg,f,c
   466   001238  D7FE               	bra	u1197
   467   00123A  2E33               	decfsz	??_main^0,f,c
   468   00123C  D7FC               	bra	u1197
   469   00123E  2E34               	decfsz	(??_main+1)^0,f,c
   470   001240  D7FA               	bra	u1197
   471   001242  F000 F000          	nop2	
   472                           
   473                           ;app.c: 49:         ret = dc_motor_stop(&dc_motor_1);
   474   001246  0E21               	movlw	low _dc_motor_1
   475   001248  6E2D               	movwf	dc_motor_stop@dc_motor^0,c
   476   00124A  EC70  F00A         	call	_dc_motor_stop	;wreg free
   477   00124E  6E35               	movwf	main@ret^0,c
   478                           
   479                           ;app.c: 50:         ret = dc_motor_stop(&dc_motor_2);
   480   001250  0E1F               	movlw	low _dc_motor_2
   481   001252  6E2D               	movwf	dc_motor_stop@dc_motor^0,c
   482   001254  EC70  F00A         	call	_dc_motor_stop	;wreg free
   483   001258  6E35               	movwf	main@ret^0,c
   484   00125A                     
   485                           ;app.c: 51:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   486   00125A  0E1F               	movlw	31
   487   00125C  6E34               	movwf	(??_main+1)^0,c
   488   00125E  0E71               	movlw	113
   489   001260  6E33               	movwf	??_main^0,c
   490   001262  0E1E               	movlw	30
   491   001264                     u1207:
   492   001264  2EE8               	decfsz	wreg,f,c
   493   001266  D7FE               	bra	u1207
   494   001268  2E33               	decfsz	??_main^0,f,c
   495   00126A  D7FC               	bra	u1207
   496   00126C  2E34               	decfsz	(??_main+1)^0,f,c
   497   00126E  D7FA               	bra	u1207
   498   001270  F000 F000          	nop2	
   499   001274  0E21               	movlw	low _dc_motor_1
   500   001276  6E2D               	movwf	dc_motor_move_backward@dc_motor^0,c
   501   001278  ECA8  F00A         	call	_dc_motor_move_backward	;wreg free
   502   00127C  0E1F               	movlw	low _dc_motor_2
   503   00127E  6E2D               	movwf	dc_motor_move_forward@dc_motor^0,c
   504   001280  EC8C  F00A         	call	_dc_motor_move_forward	;wreg free
   505   001284                     
   506                           ;app.c: 54:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   507   001284  0E1F               	movlw	31
   508   001286  6E34               	movwf	(??_main+1)^0,c
   509   001288  0E71               	movlw	113
   510   00128A  6E33               	movwf	??_main^0,c
   511   00128C  0E1E               	movlw	30
   512   00128E                     u1217:
   513   00128E  2EE8               	decfsz	wreg,f,c
   514   001290  D7FE               	bra	u1217
   515   001292  2E33               	decfsz	??_main^0,f,c
   516   001294  D7FC               	bra	u1217
   517   001296  2E34               	decfsz	(??_main+1)^0,f,c
   518   001298  D7FA               	bra	u1217
   519   00129A  F000 F000          	nop2	
   520   00129E  EFCB  F008         	goto	l1737
   521   0012A2                     l289:
   522   0012A2  EF00  F000         	goto	start
   523   0012A6                     __end_of_main:
   524                           	callstack 0
   525                           
   526 ;; *************** function _dc_motor_stop *****************
   527 ;; Defined at:
   528 ;;		line 92 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   531 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  ret             1    9[COMRAM] unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      unsigned char 
   536 ;; Registers used:
   537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   543 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;Total ram usage:        2 bytes
   548 ;; Hardware stack levels used: 1
   549 ;; Hardware stack levels required when called: 1
   550 ;; This function calls:
   551 ;;		_gpio_pin_write_logic
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text1
   558   0014E0                     __ptext1:
   559                           	callstack 0
   560   0014E0                     _dc_motor_stop:
   561                           	callstack 29
   562   0014E0                     
   563                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 92: Std_ReturnType dc_motor_stop(const dc_motor_t *d
      +                          c_motor);ECU_Layer/DC_Motor/ecu_dc_motor.c: 93: {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 94:
      +                               Std_ReturnType ret = (Std_ReturnType)0x00u;
   564   0014E0  0E00               	movlw	0
   565   0014E2  6E2E               	movwf	dc_motor_stop@ret^0,c
   566                           
   567                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 96:     if (((void*)0) == dc_motor)
   568   0014E4  502D               	movf	dc_motor_stop@dc_motor^0,w,c
   569   0014E6  A4D8               	btfss	status,2,c
   570   0014E8  EF78  F00A         	goto	u941
   571   0014EC  EF7A  F00A         	goto	u940
   572   0014F0                     u941:
   573   0014F0  EF7E  F00A         	goto	l1585
   574   0014F4                     u940:
   575   0014F4                     
   576                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 97:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 98:    
      +                               ret = (Std_ReturnType)0x01u;
   577   0014F4  0E01               	movlw	1
   578   0014F6  6E2E               	movwf	dc_motor_stop@ret^0,c
   579                           
   580                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 99:     }
   581   0014F8  EF8A  F00A         	goto	l1587
   582   0014FC                     l1585:
   583                           
   584                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 101:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 102:  
      +                                 gpio_pin_write_logic(&motor_pin1, GPIO_LOW);
   585   0014FC  0E45               	movlw	low _motor_pin1
   586   0014FE  6E25               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   587   001500  0E00               	movlw	0
   588   001502  6E26               	movwf	gpio_pin_write_logic@logic^0,c
   589   001504  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   590                           
   591                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 103:         gpio_pin_write_logic(&motor_pin2, GPIO_
      +                          LOW);
   592   001508  0E44               	movlw	low _motor_pin2
   593   00150A  6E25               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   594   00150C  0E00               	movlw	0
   595   00150E  6E26               	movwf	gpio_pin_write_logic@logic^0,c
   596   001510  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   597   001514                     l1587:
   598                           
   599                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 105:     return (ret);
   600   001514  502E               	movf	dc_motor_stop@ret^0,w,c
   601   001516  0012               	return		;funcret
   602   001518                     __end_of_dc_motor_stop:
   603                           	callstack 0
   604                           
   605 ;; *************** function _dc_motor_move_forward *****************
   606 ;; Defined at:
   607 ;;		line 49 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   610 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  ret             1    9[COMRAM] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      unsigned char 
   615 ;; Registers used:
   616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   622 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;Total ram usage:        2 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 1
   629 ;; This function calls:
   630 ;;		_gpio_pin_write_logic
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text2
   637   001518                     __ptext2:
   638                           	callstack 0
   639   001518                     _dc_motor_move_forward:
   640                           	callstack 29
   641   001518                     
   642                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 49: Std_ReturnType dc_motor_move_forward(const dc_mo
      +                          tor_t *dc_motor);ECU_Layer/DC_Motor/ecu_dc_motor.c: 50: {;ECU_Layer/DC_Motor/ecu_dc_moto
      +                          r.c: 51:     Std_ReturnType ret = (Std_ReturnType)0x00u;
   643   001518  0E00               	movlw	0
   644   00151A  6E2E               	movwf	dc_motor_move_forward@ret^0,c
   645                           
   646                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 53:     if (((void*)0) == dc_motor)
   647   00151C  502D               	movf	dc_motor_move_forward@dc_motor^0,w,c
   648   00151E  A4D8               	btfss	status,2,c
   649   001520  EF94  F00A         	goto	u921
   650   001524  EF96  F00A         	goto	u920
   651   001528                     u921:
   652   001528  EF9A  F00A         	goto	l1565
   653   00152C                     u920:
   654   00152C                     
   655                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 54:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 55:    
      +                               ret = (Std_ReturnType)0x01u;
   656   00152C  0E01               	movlw	1
   657   00152E  6E2E               	movwf	dc_motor_move_forward@ret^0,c
   658                           
   659                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 56:     }
   660   001530  EFA6  F00A         	goto	l1567
   661   001534                     l1565:
   662                           
   663                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 58:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 59:    
      +                               gpio_pin_write_logic(&motor_pin1, GPIO_HIGH);
   664   001534  0E45               	movlw	low _motor_pin1
   665   001536  6E25               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   666   001538  0E01               	movlw	1
   667   00153A  6E26               	movwf	gpio_pin_write_logic@logic^0,c
   668   00153C  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   669                           
   670                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 60:         gpio_pin_write_logic(&motor_pin2, GPIO_L
      +                          OW);
   671   001540  0E44               	movlw	low _motor_pin2
   672   001542  6E25               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   673   001544  0E00               	movlw	0
   674   001546  6E26               	movwf	gpio_pin_write_logic@logic^0,c
   675   001548  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   676   00154C                     l1567:
   677                           
   678                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 62:     return (ret);
   679   00154C  502E               	movf	dc_motor_move_forward@ret^0,w,c
   680   00154E  0012               	return		;funcret
   681   001550                     __end_of_dc_motor_move_forward:
   682                           	callstack 0
   683                           
   684 ;; *************** function _dc_motor_move_backward *****************
   685 ;; Defined at:
   686 ;;		line 70 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   689 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  ret             1    9[COMRAM] unsigned char 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      unsigned char 
   694 ;; Registers used:
   695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   701 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;Total ram usage:        2 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 1
   708 ;; This function calls:
   709 ;;		_gpio_pin_write_logic
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text3
   716   001550                     __ptext3:
   717                           	callstack 0
   718   001550                     _dc_motor_move_backward:
   719                           	callstack 29
   720   001550                     
   721                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 70: Std_ReturnType dc_motor_move_backward(const dc_m
      +                          otor_t *dc_motor);ECU_Layer/DC_Motor/ecu_dc_motor.c: 71: {;ECU_Layer/DC_Motor/ecu_dc_mot
      +                          or.c: 72:     Std_ReturnType ret = (Std_ReturnType)0x00u;
   722   001550  0E00               	movlw	0
   723   001552  6E2E               	movwf	dc_motor_move_backward@ret^0,c
   724                           
   725                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 74:     if (((void*)0) == dc_motor)
   726   001554  502D               	movf	dc_motor_move_backward@dc_motor^0,w,c
   727   001556  A4D8               	btfss	status,2,c
   728   001558  EFB0  F00A         	goto	u931
   729   00155C  EFB2  F00A         	goto	u930
   730   001560                     u931:
   731   001560  EFB6  F00A         	goto	l1575
   732   001564                     u930:
   733   001564                     
   734                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 75:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 76:    
      +                               ret = (Std_ReturnType)0x01u;
   735   001564  0E01               	movlw	1
   736   001566  6E2E               	movwf	dc_motor_move_backward@ret^0,c
   737                           
   738                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 77:     }
   739   001568  EFC2  F00A         	goto	l1577
   740   00156C                     l1575:
   741                           
   742                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 79:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 81:    
      +                               gpio_pin_write_logic(&motor_pin1, GPIO_LOW);
   743   00156C  0E45               	movlw	low _motor_pin1
   744   00156E  6E25               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   745   001570  0E00               	movlw	0
   746   001572  6E26               	movwf	gpio_pin_write_logic@logic^0,c
   747   001574  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   748                           
   749                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 82:         gpio_pin_write_logic(&motor_pin2, GPIO_H
      +                          IGH);
   750   001578  0E44               	movlw	low _motor_pin2
   751   00157A  6E25               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   752   00157C  0E01               	movlw	1
   753   00157E  6E26               	movwf	gpio_pin_write_logic@logic^0,c
   754   001580  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   755   001584                     l1577:
   756                           
   757                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 84:     return (ret);
   758   001584  502E               	movf	dc_motor_move_backward@ret^0,w,c
   759   001586  0012               	return		;funcret
   760   001588                     __end_of_dc_motor_move_backward:
   761                           	callstack 0
   762                           
   763 ;; *************** function _application_initialize *****************
   764 ;; Defined at:
   765 ;;		line 58 in file "app.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  ret             1   13[COMRAM] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      unsigned char 
   772 ;; Registers used:
   773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;Total ram usage:        1 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; Hardware stack levels required when called: 3
   786 ;; This function calls:
   787 ;;		_dc_motor_initialize
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text4
   794   0015E2                     __ptext4:
   795                           	callstack 0
   796   0015E2                     _application_initialize:
   797                           	callstack 27
   798   0015E2  0E21               	movlw	low _dc_motor_1
   799   0015E4  6E2F               	movwf	dc_motor_initialize@dc_motor^0,c
   800   0015E6  ECDC  F009         	call	_dc_motor_initialize	;wreg free
   801   0015EA                     
   802                           ;app.c: 62:     ret = dc_motor_initialize(&dc_motor_2);
   803   0015EA  0E1F               	movlw	low _dc_motor_2
   804   0015EC  6E2F               	movwf	dc_motor_initialize@dc_motor^0,c
   805   0015EE  ECDC  F009         	call	_dc_motor_initialize	;wreg free
   806   0015F2  6E32               	movwf	application_initialize@ret^0,c
   807                           
   808                           ;app.c: 65:     return (ret);
   809   0015F4  5032               	movf	application_initialize@ret^0,w,c
   810   0015F6  0012               	return		;funcret
   811   0015F8                     __end_of_application_initialize:
   812                           	callstack 0
   813                           
   814 ;; *************** function _dc_motor_initialize *****************
   815 ;; Defined at:
   816 ;;		line 16 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  dc_motor        1   10[COMRAM] PTR const struct .
   819 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  ret             1   12[COMRAM] unsigned char 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      unsigned char 
   824 ;; Registers used:
   825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   831 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;Total ram usage:        3 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; Hardware stack levels required when called: 2
   838 ;; This function calls:
   839 ;;		_gpio_pin_initialize
   840 ;; This function is called by:
   841 ;;		_application_initialize
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text5
   846   0013B8                     __ptext5:
   847                           	callstack 0
   848   0013B8                     _dc_motor_initialize:
   849                           	callstack 27
   850   0013B8                     
   851                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 16: Std_ReturnType dc_motor_initialize(const dc_moto
      +                          r_t *dc_motor);ECU_Layer/DC_Motor/ecu_dc_motor.c: 17: {;ECU_Layer/DC_Motor/ecu_dc_motor.
      +                          c: 18:     Std_ReturnType ret = (Std_ReturnType)0x00u;
   852   0013B8  0E00               	movlw	0
   853   0013BA  6E31               	movwf	dc_motor_initialize@ret^0,c
   854                           
   855                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:     if (((void*)0) == dc_motor)
   856   0013BC  502F               	movf	dc_motor_initialize@dc_motor^0,w,c
   857   0013BE  A4D8               	btfss	status,2,c
   858   0013C0  EFE4  F009         	goto	u891
   859   0013C4  EFE6  F009         	goto	u890
   860   0013C8                     u891:
   861   0013C8  EFEA  F009         	goto	l1539
   862   0013CC                     u890:
   863   0013CC                     
   864                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 21:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 22:    
      +                               ret = (Std_ReturnType)0x01u;
   865   0013CC  0E01               	movlw	1
   866   0013CE  6E31               	movwf	dc_motor_initialize@ret^0,c
   867                           
   868                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 23:     }
   869   0013D0  EF3C  F00A         	goto	l1557
   870   0013D4                     l1539:
   871                           
   872                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 25:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 27:    
      +                               motor_pin1.port = dc_motor->dc_motor[0x00U].dc_motor_port;
   873   0013D4  502F               	movf	dc_motor_initialize@dc_motor^0,w,c
   874   0013D6  6ED9               	movwf	fsr2l,c
   875   0013D8  6ADA               	clrf	fsr2h,c
   876   0013DA  50DF               	movf	223,w,c
   877   0013DC  0B0F               	andlw	15
   878   0013DE  6E30               	movwf	??_dc_motor_initialize^0,c
   879   0013E0  5045               	movf	_motor_pin1^0,w,c
   880   0013E2  1830               	xorwf	??_dc_motor_initialize^0,w,c
   881   0013E4  0BF8               	andlw	-8
   882   0013E6  1830               	xorwf	??_dc_motor_initialize^0,w,c
   883   0013E8  6E45               	movwf	_motor_pin1^0,c
   884                           
   885                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 28:         motor_pin1.pin = dc_motor->dc_motor[0x00
      +                          U].dc_motor_pin;
   886   0013EA  502F               	movf	dc_motor_initialize@dc_motor^0,w,c
   887   0013EC  6ED9               	movwf	fsr2l,c
   888   0013EE  6ADA               	clrf	fsr2h,c
   889   0013F0  38DF               	swapf	223,w,c
   890   0013F2  0B07               	andlw	7
   891   0013F4  6E30               	movwf	??_dc_motor_initialize^0,c
   892   0013F6  4630               	rlncf	??_dc_motor_initialize^0,f,c
   893   0013F8  4630               	rlncf	??_dc_motor_initialize^0,f,c
   894   0013FA  4630               	rlncf	??_dc_motor_initialize^0,f,c
   895   0013FC  5045               	movf	_motor_pin1^0,w,c
   896   0013FE  1830               	xorwf	??_dc_motor_initialize^0,w,c
   897   001400  0BC7               	andlw	-57
   898   001402  1830               	xorwf	??_dc_motor_initialize^0,w,c
   899   001404  6E45               	movwf	_motor_pin1^0,c
   900   001406                     
   901                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 29:         motor_pin1.logic = dc_motor->dc_motor[0x
      +                          00U].dc_motor_status;
   902   001406  502F               	movf	dc_motor_initialize@dc_motor^0,w,c
   903   001408  6ED9               	movwf	fsr2l,c
   904   00140A  6ADA               	clrf	fsr2h,c
   905   00140C  AEDF               	btfss	indf2,7,c
   906   00140E  D002               	bra	u905
   907   001410  8E45               	bsf	_motor_pin1^0,7,c
   908   001412  D001               	bra	u907
   909   001414                     u905:
   910   001414  9E45               	bcf	_motor_pin1^0,7,c
   911   001416                     u907:
   912   001416                     
   913                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 30:         motor_pin1.direction = GPIO_DIRECTION_OU
      +                          TPUT;
   914   001416  9C45               	bcf	_motor_pin1^0,6,c
   915   001418                     
   916                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 33:         motor_pin2.port = dc_motor->dc_motor[0x0
      +                          1U].dc_motor_port;
   917   001418  502F               	movf	dc_motor_initialize@dc_motor^0,w,c
   918   00141A  6ED9               	movwf	fsr2l,c
   919   00141C  6ADA               	clrf	fsr2h,c
   920   00141E  0E01               	movlw	1
   921   001420  26D9               	addwf	fsr2l,f,c
   922   001422  50DF               	movf	223,w,c
   923   001424  0B0F               	andlw	15
   924   001426  6E30               	movwf	??_dc_motor_initialize^0,c
   925   001428  5044               	movf	_motor_pin2^0,w,c
   926   00142A  1830               	xorwf	??_dc_motor_initialize^0,w,c
   927   00142C  0BF8               	andlw	-8
   928   00142E  1830               	xorwf	??_dc_motor_initialize^0,w,c
   929   001430  6E44               	movwf	_motor_pin2^0,c
   930   001432                     
   931                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 34:         motor_pin2.pin = dc_motor->dc_motor[0x01
      +                          U].dc_motor_pin;
   932   001432  502F               	movf	dc_motor_initialize@dc_motor^0,w,c
   933   001434  6ED9               	movwf	fsr2l,c
   934   001436  6ADA               	clrf	fsr2h,c
   935   001438  0E01               	movlw	1
   936   00143A  26D9               	addwf	fsr2l,f,c
   937   00143C  38DF               	swapf	223,w,c
   938   00143E  0B07               	andlw	7
   939   001440  6E30               	movwf	??_dc_motor_initialize^0,c
   940   001442  4630               	rlncf	??_dc_motor_initialize^0,f,c
   941   001444  4630               	rlncf	??_dc_motor_initialize^0,f,c
   942   001446  4630               	rlncf	??_dc_motor_initialize^0,f,c
   943   001448  5044               	movf	_motor_pin2^0,w,c
   944   00144A  1830               	xorwf	??_dc_motor_initialize^0,w,c
   945   00144C  0BC7               	andlw	-57
   946   00144E  1830               	xorwf	??_dc_motor_initialize^0,w,c
   947   001450  6E44               	movwf	_motor_pin2^0,c
   948   001452                     
   949                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 35:         motor_pin2.logic = dc_motor->dc_motor[0x
      +                          01U].dc_motor_status;
   950   001452  502F               	movf	dc_motor_initialize@dc_motor^0,w,c
   951   001454  6ED9               	movwf	fsr2l,c
   952   001456  6ADA               	clrf	fsr2h,c
   953   001458  0E01               	movlw	1
   954   00145A  26D9               	addwf	fsr2l,f,c
   955   00145C  AEDF               	btfss	indf2,7,c
   956   00145E  D002               	bra	u915
   957   001460  8E44               	bsf	_motor_pin2^0,7,c
   958   001462  D001               	bra	u917
   959   001464                     u915:
   960   001464  9E44               	bcf	_motor_pin2^0,7,c
   961   001466                     u917:
   962   001466                     
   963                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 36:         motor_pin2.direction = GPIO_DIRECTION_OU
      +                          TPUT;
   964   001466  9C44               	bcf	_motor_pin2^0,6,c
   965   001468                     
   966                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 38:         gpio_pin_initialize(&motor_pin1);
   967   001468  0E45               	movlw	low _motor_pin1
   968   00146A  6E2D               	movwf	gpio_pin_initialize@_pin_config_t^0,c
   969   00146C  EC3E  F00A         	call	_gpio_pin_initialize	;wreg free
   970   001470                     
   971                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 39:         gpio_pin_initialize(&motor_pin2);
   972   001470  0E44               	movlw	low _motor_pin2
   973   001472  6E2D               	movwf	gpio_pin_initialize@_pin_config_t^0,c
   974   001474  EC3E  F00A         	call	_gpio_pin_initialize	;wreg free
   975   001478                     l1557:
   976                           
   977                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 41:     return (ret);
   978   001478  5031               	movf	dc_motor_initialize@ret^0,w,c
   979   00147A  0012               	return		;funcret
   980   00147C                     __end_of_dc_motor_initialize:
   981                           	callstack 0
   982                           
   983 ;; *************** function _gpio_pin_initialize *****************
   984 ;; Defined at:
   985 ;;		line 17 in file "MCAL_Layer/GPIO/hal_gpio.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  _pin_config_    1    8[COMRAM] PTR struct .
   988 ;;		 -> relay_initialize@pin_obj(1), led_intitialize@pin(1), motor_pin2(1), motor_pin1(1), 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  ret             1    0        unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      unsigned char 
   993 ;; Registers used:
   994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1000 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;Total ram usage:        2 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; Hardware stack levels required when called: 1
  1007 ;; This function calls:
  1008 ;;		_gpio_pin_direction_initialize
  1009 ;;		_gpio_pin_write_logic
  1010 ;; This function is called by:
  1011 ;;		_dc_motor_initialize
  1012 ;;		_led_intitialize
  1013 ;;		_relay_initialize
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text6
  1018   00147C                     __ptext6:
  1019                           	callstack 0
  1020   00147C                     _gpio_pin_initialize:
  1021                           	callstack 27
  1022   00147C                     
  1023                           ;MCAL_Layer/GPIO/hal_gpio.c: 20:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  1024   00147C  502D               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
  1025   00147E  B4D8               	btfsc	status,2,c
  1026   001480  EF44  F00A         	goto	u861
  1027   001484  EF46  F00A         	goto	u860
  1028   001488                     u861:
  1029   001488  EF56  F00A         	goto	l1527
  1030   00148C                     u860:
  1031   00148C  502D               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
  1032   00148E  6ED9               	movwf	fsr2l,c
  1033   001490  6ADA               	clrf	fsr2h,c
  1034   001492  30DF               	rrcf	223,w,c
  1035   001494  32E8               	rrcf	wreg,f,c
  1036   001496  32E8               	rrcf	wreg,f,c
  1037   001498  0B07               	andlw	7
  1038   00149A  6E2E               	movwf	??_gpio_pin_initialize^0,c
  1039   00149C  0E07               	movlw	7
  1040   00149E  642E               	cpfsgt	??_gpio_pin_initialize^0,c
  1041   0014A0  EF54  F00A         	goto	u871
  1042   0014A4  EF56  F00A         	goto	u870
  1043   0014A8                     u871:
  1044   0014A8  EF58  F00A         	goto	l1529
  1045   0014AC                     u870:
  1046   0014AC                     l1527:
  1047                           
  1048                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     }
  1049   0014AC  EF6F  F00A         	goto	l193
  1050   0014B0                     l1529:
  1051                           
  1052                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     {;MCAL_Layer/GPIO/hal_gpio.c: 26:         if (ret =
      +                          = gpio_pin_direction_initialize(_pin_config_t))
  1053   0014B0  C02D  F025         	movff	gpio_pin_initialize@_pin_config_t,gpio_pin_direction_initialize@_pin_config_t
  1054   0014B4  EC53  F009         	call	_gpio_pin_direction_initialize	;wreg free
  1055   0014B8  0900               	iorlw	0
  1056   0014BA  A4D8               	btfss	status,2,c
  1057   0014BC  EF62  F00A         	goto	u881
  1058   0014C0  EF64  F00A         	goto	u880
  1059   0014C4                     u881:
  1060   0014C4  EF6F  F00A         	goto	l193
  1061   0014C8                     u880:
  1062   0014C8  C02D  F025         	movff	gpio_pin_initialize@_pin_config_t,gpio_pin_write_logic@_pin_config_t
  1063   0014CC  502D               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
  1064   0014CE  6ED9               	movwf	fsr2l,c
  1065   0014D0  6ADA               	clrf	fsr2h,c
  1066   0014D2  0E00               	movlw	0
  1067   0014D4  BEDF               	btfsc	indf2,7,c
  1068   0014D6  0E01               	movlw	1
  1069   0014D8  6E26               	movwf	gpio_pin_write_logic@logic^0,c
  1070   0014DA  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
  1071   0014DE                     l193:
  1072   0014DE  0012               	return		;funcret
  1073   0014E0                     __end_of_gpio_pin_initialize:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _gpio_pin_write_logic *****************
  1077 ;; Defined at:
  1078 ;;		line 96 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  _pin_config_    1    0[COMRAM] PTR struct .
  1081 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin(1), 
  1082 ;;		 -> led_turn_on@pin(1), led_intitialize@pin(1), motor_pin2(1), motor_pin1(1), 
  1083 ;;  logic           1    1[COMRAM] enum E3076
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  ret             1    7[COMRAM] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      unsigned char 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;Total ram usage:        8 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_dc_motor_move_forward
  1105 ;;		_dc_motor_move_backward
  1106 ;;		_dc_motor_stop
  1107 ;;		_gpio_pin_initialize
  1108 ;;		_led_turn_on
  1109 ;;		_led_turn_off
  1110 ;;		_relay_turn_on
  1111 ;;		_relay_turn_off
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text7
  1116   001002                     __ptext7:
  1117                           	callstack 0
  1118   001002                     _gpio_pin_write_logic:
  1119                           	callstack 29
  1120   001002                     
  1121                           ;MCAL_Layer/GPIO/hal_gpio.c: 96: Std_ReturnType gpio_pin_write_logic(pin_config_t *_pin_
      +                          config_t, logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 97: {;MCAL_Layer/GPIO/hal_gpio.c: 9
      +                          8:     Std_ReturnType ret = (Std_ReturnType)0x00u;
  1122   001002  0E00               	movlw	0
  1123   001004  6E2C               	movwf	gpio_pin_write_logic@ret^0,c
  1124                           
  1125                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  1126   001006  5025               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1127   001008  B4D8               	btfsc	status,2,c
  1128   00100A  EF09  F008         	goto	u801
  1129   00100E  EF0B  F008         	goto	u800
  1130   001012                     u801:
  1131   001012  EF1B  F008         	goto	l1499
  1132   001016                     u800:
  1133   001016  5025               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1134   001018  6ED9               	movwf	fsr2l,c
  1135   00101A  6ADA               	clrf	fsr2h,c
  1136   00101C  30DF               	rrcf	223,w,c
  1137   00101E  32E8               	rrcf	wreg,f,c
  1138   001020  32E8               	rrcf	wreg,f,c
  1139   001022  0B07               	andlw	7
  1140   001024  6E27               	movwf	??_gpio_pin_write_logic^0,c
  1141   001026  0E07               	movlw	7
  1142   001028  6427               	cpfsgt	??_gpio_pin_write_logic^0,c
  1143   00102A  EF19  F008         	goto	u811
  1144   00102E  EF1B  F008         	goto	u810
  1145   001032                     u811:
  1146   001032  EF1F  F008         	goto	l1501
  1147   001036                     u810:
  1148   001036                     l1499:
  1149                           
  1150                           ;MCAL_Layer/GPIO/hal_gpio.c: 100:     {;MCAL_Layer/GPIO/hal_gpio.c: 101:         ret = (
      +                          Std_ReturnType)0x01u;
  1151   001036  0E01               	movlw	1
  1152   001038  6E2C               	movwf	gpio_pin_write_logic@ret^0,c
  1153                           
  1154                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:     }
  1155   00103A  EFBC  F008         	goto	l1515
  1156   00103E                     l1501:
  1157                           
  1158                           ;MCAL_Layer/GPIO/hal_gpio.c: 104:     {;MCAL_Layer/GPIO/hal_gpio.c: 105:         _pin_co
      +                          nfig_t->logic = logic;
  1159   00103E  5025               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1160   001040  6ED9               	movwf	fsr2l,c
  1161   001042  6ADA               	clrf	fsr2h,c
  1162   001044  B026               	btfsc	gpio_pin_write_logic@logic^0,0,c
  1163   001046  D002               	bra	u825
  1164   001048  9EDF               	bcf	indf2,7,c
  1165   00104A  D001               	bra	u826
  1166   00104C                     u825:
  1167   00104C  8EDF               	bsf	indf2,7,c
  1168   00104E                     u826:
  1169                           
  1170                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:         switch (logic)
  1171   00104E  EFA7  F008         	goto	l1513
  1172   001052                     l1503:
  1173                           
  1174                           ;MCAL_Layer/GPIO/hal_gpio.c: 109:                 (*lat_registers[_pin_config_t->port] |
      +                          = ((uint8)1 << _pin_config_t->pin));
  1175   001052  5025               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1176   001054  6ED9               	movwf	fsr2l,c
  1177   001056  6ADA               	clrf	fsr2h,c
  1178   001058  30DF               	rrcf	223,w,c
  1179   00105A  32E8               	rrcf	wreg,f,c
  1180   00105C  32E8               	rrcf	wreg,f,c
  1181   00105E  0B07               	andlw	7
  1182   001060  6E27               	movwf	??_gpio_pin_write_logic^0,c
  1183   001062  0E01               	movlw	1
  1184   001064  6E28               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1185   001066  2A27               	incf	??_gpio_pin_write_logic^0,f,c
  1186   001068  EF38  F008         	goto	u834
  1187   00106C                     u835:
  1188   00106C  90D8               	bcf	status,0,c
  1189   00106E  3628               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1190   001070                     u834:
  1191   001070  2E27               	decfsz	??_gpio_pin_write_logic^0,f,c
  1192   001072  EF36  F008         	goto	u835
  1193   001076  5025               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1194   001078  6ED9               	movwf	fsr2l,c
  1195   00107A  6ADA               	clrf	fsr2h,c
  1196   00107C  50DF               	movf	223,w,c
  1197   00107E  0B07               	andlw	7
  1198   001080  0D02               	mullw	2
  1199   001082  50F3               	movf	243,w,c
  1200   001084  0F15               	addlw	low _lat_registers
  1201   001086  6ED9               	movwf	fsr2l,c
  1202   001088  6ADA               	clrf	fsr2h,c
  1203   00108A  CFDE F029          	movff	postinc2,??_gpio_pin_write_logic+2
  1204   00108E  CFDD F02A          	movff	postdec2,??_gpio_pin_write_logic+3
  1205   001092  C029  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1206   001096  C02A  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1207   00109A  5028               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1208   00109C  12DF               	iorwf	indf2,f,c
  1209                           
  1210                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:                 break;
  1211   00109E  EFBC  F008         	goto	l1515
  1212   0010A2                     l1505:
  1213                           
  1214                           ;MCAL_Layer/GPIO/hal_gpio.c: 112:                 (*lat_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  1215   0010A2  5025               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1216   0010A4  6ED9               	movwf	fsr2l,c
  1217   0010A6  6ADA               	clrf	fsr2h,c
  1218   0010A8  30DF               	rrcf	223,w,c
  1219   0010AA  32E8               	rrcf	wreg,f,c
  1220   0010AC  32E8               	rrcf	wreg,f,c
  1221   0010AE  0B07               	andlw	7
  1222   0010B0  6E27               	movwf	??_gpio_pin_write_logic^0,c
  1223   0010B2  0E01               	movlw	1
  1224   0010B4  6E28               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1225   0010B6  2A27               	incf	??_gpio_pin_write_logic^0,f,c
  1226   0010B8  EF60  F008         	goto	u844
  1227   0010BC                     u845:
  1228   0010BC  90D8               	bcf	status,0,c
  1229   0010BE  3628               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1230   0010C0                     u844:
  1231   0010C0  2E27               	decfsz	??_gpio_pin_write_logic^0,f,c
  1232   0010C2  EF5E  F008         	goto	u845
  1233   0010C6  5028               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1234   0010C8  0AFF               	xorlw	255
  1235   0010CA  6E29               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1236   0010CC  5025               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1237   0010CE  6ED9               	movwf	fsr2l,c
  1238   0010D0  6ADA               	clrf	fsr2h,c
  1239   0010D2  50DF               	movf	223,w,c
  1240   0010D4  0B07               	andlw	7
  1241   0010D6  0D02               	mullw	2
  1242   0010D8  50F3               	movf	243,w,c
  1243   0010DA  0F15               	addlw	low _lat_registers
  1244   0010DC  6ED9               	movwf	fsr2l,c
  1245   0010DE  6ADA               	clrf	fsr2h,c
  1246   0010E0  CFDE F02A          	movff	postinc2,??_gpio_pin_write_logic+3
  1247   0010E4  CFDD F02B          	movff	postdec2,??_gpio_pin_write_logic+4
  1248   0010E8  C02A  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1249   0010EC  C02B  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1250   0010F0  5029               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1251   0010F2  16DF               	andwf	indf2,f,c
  1252                           
  1253                           ;MCAL_Layer/GPIO/hal_gpio.c: 113:                 break;
  1254   0010F4  EFBC  F008         	goto	l1515
  1255   0010F8                     l1507:
  1256                           
  1257                           ;MCAL_Layer/GPIO/hal_gpio.c: 115:                 (*lat_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  1258   0010F8  5025               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1259   0010FA  6ED9               	movwf	fsr2l,c
  1260   0010FC  6ADA               	clrf	fsr2h,c
  1261   0010FE  30DF               	rrcf	223,w,c
  1262   001100  32E8               	rrcf	wreg,f,c
  1263   001102  32E8               	rrcf	wreg,f,c
  1264   001104  0B07               	andlw	7
  1265   001106  6E27               	movwf	??_gpio_pin_write_logic^0,c
  1266   001108  0E01               	movlw	1
  1267   00110A  6E28               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1268   00110C  2A27               	incf	??_gpio_pin_write_logic^0,f,c
  1269   00110E  EF8B  F008         	goto	u854
  1270   001112                     u855:
  1271   001112  90D8               	bcf	status,0,c
  1272   001114  3628               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1273   001116                     u854:
  1274   001116  2E27               	decfsz	??_gpio_pin_write_logic^0,f,c
  1275   001118  EF89  F008         	goto	u855
  1276   00111C  5028               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1277   00111E  0AFF               	xorlw	255
  1278   001120  6E29               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1279   001122  5025               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1280   001124  6ED9               	movwf	fsr2l,c
  1281   001126  6ADA               	clrf	fsr2h,c
  1282   001128  50DF               	movf	223,w,c
  1283   00112A  0B07               	andlw	7
  1284   00112C  0D02               	mullw	2
  1285   00112E  50F3               	movf	243,w,c
  1286   001130  0F15               	addlw	low _lat_registers
  1287   001132  6ED9               	movwf	fsr2l,c
  1288   001134  6ADA               	clrf	fsr2h,c
  1289   001136  CFDE F02A          	movff	postinc2,??_gpio_pin_write_logic+3
  1290   00113A  CFDD F02B          	movff	postdec2,??_gpio_pin_write_logic+4
  1291   00113E  C02A  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1292   001142  C02B  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1293   001146  5029               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1294   001148  16DF               	andwf	indf2,f,c
  1295   00114A  EF1B  F008         	goto	l1499
  1296   00114E                     l1513:
  1297   00114E  5026               	movf	gpio_pin_write_logic@logic^0,w,c
  1298   001150  6E27               	movwf	??_gpio_pin_write_logic^0,c
  1299   001152  6A28               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1300                           
  1301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1302                           ; Switch size 1, requested type "simple"
  1303                           ; Number of cases is 1, Range of values is 0 to 0
  1304                           ; switch strategies available:
  1305                           ; Name         Instructions Cycles
  1306                           ; simple_byte            4     3 (average)
  1307                           ;	Chosen strategy is simple_byte
  1308   001154  5028               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1309   001156  0A00               	xorlw	0	; case 0
  1310   001158  B4D8               	btfsc	status,2,c
  1311   00115A  EFB1  F008         	goto	l1791
  1312   00115E  EF7C  F008         	goto	l1507
  1313   001162                     l1791:
  1314                           
  1315                           ; Switch size 1, requested type "simple"
  1316                           ; Number of cases is 2, Range of values is 0 to 1
  1317                           ; switch strategies available:
  1318                           ; Name         Instructions Cycles
  1319                           ; simple_byte            7     4 (average)
  1320                           ;	Chosen strategy is simple_byte
  1321   001162  5027               	movf	??_gpio_pin_write_logic^0,w,c
  1322   001164  0A00               	xorlw	0	; case 0
  1323   001166  B4D8               	btfsc	status,2,c
  1324   001168  EF51  F008         	goto	l1505
  1325   00116C  0A01               	xorlw	1	; case 1
  1326   00116E  B4D8               	btfsc	status,2,c
  1327   001170  EF29  F008         	goto	l1503
  1328   001174  EF7C  F008         	goto	l1507
  1329   001178                     l1515:
  1330                           
  1331                           ;MCAL_Layer/GPIO/hal_gpio.c: 120:     return (ret);
  1332   001178  502C               	movf	gpio_pin_write_logic@ret^0,w,c
  1333   00117A  0012               	return		;funcret
  1334   00117C                     __end_of_gpio_pin_write_logic:
  1335                           	callstack 0
  1336                           
  1337 ;; *************** function _gpio_pin_direction_initialize *****************
  1338 ;; Defined at:
  1339 ;;		line 39 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  _pin_config_    1    0[COMRAM] PTR const struct .
  1342 ;;		 -> relay_initialize@pin_obj(1), led_intitialize@pin(1), motor_pin2(1), motor_pin1(1), 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  ret             1    6[COMRAM] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      unsigned char 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1354 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;Total ram usage:        7 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_gpio_pin_initialize
  1364 ;;		_button_initialize
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text8
  1369   0012A6                     __ptext8:
  1370                           	callstack 0
  1371   0012A6                     _gpio_pin_direction_initialize:
  1372                           	callstack 27
  1373   0012A6                     
  1374                           ;MCAL_Layer/GPIO/hal_gpio.c: 39: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t *_pin_config_t);MCAL_Layer/GPIO/hal_gpio.c: 40: {;MCAL_Layer/GPIO/hal_gpio.c: 4
      +                          1:     Std_ReturnType ret = (Std_ReturnType)0x00u;
  1375   0012A6  0E00               	movlw	0
  1376   0012A8  6E2B               	movwf	gpio_pin_direction_initialize@ret^0,c
  1377                           
  1378                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  1379   0012AA  5025               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1380   0012AC  B4D8               	btfsc	status,2,c
  1381   0012AE  EF5B  F009         	goto	u751
  1382   0012B2  EF5D  F009         	goto	u750
  1383   0012B6                     u751:
  1384   0012B6  EF6D  F009         	goto	l1479
  1385   0012BA                     u750:
  1386   0012BA  5025               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1387   0012BC  6ED9               	movwf	fsr2l,c
  1388   0012BE  6ADA               	clrf	fsr2h,c
  1389   0012C0  30DF               	rrcf	223,w,c
  1390   0012C2  32E8               	rrcf	wreg,f,c
  1391   0012C4  32E8               	rrcf	wreg,f,c
  1392   0012C6  0B07               	andlw	7
  1393   0012C8  6E26               	movwf	??_gpio_pin_direction_initialize^0,c
  1394   0012CA  0E07               	movlw	7
  1395   0012CC  6426               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1396   0012CE  EF6B  F009         	goto	u761
  1397   0012D2  EF6D  F009         	goto	u760
  1398   0012D6                     u761:
  1399   0012D6  EFC4  F009         	goto	l1489
  1400   0012DA                     u760:
  1401   0012DA                     l1479:
  1402                           
  1403                           ;MCAL_Layer/GPIO/hal_gpio.c: 44:     {;MCAL_Layer/GPIO/hal_gpio.c: 45:         ret = (St
      +                          d_ReturnType)0x01u;
  1404   0012DA  0E01               	movlw	1
  1405   0012DC  6E2B               	movwf	gpio_pin_direction_initialize@ret^0,c
  1406                           
  1407                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     }
  1408   0012DE  EFDA  F009         	goto	l1491
  1409   0012E2                     l1481:
  1410                           
  1411                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 (*tris_registers[_pin_config_t->port] |
      +                          = ((uint8)1 << _pin_config_t->pin));
  1412   0012E2  5025               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1413   0012E4  6ED9               	movwf	fsr2l,c
  1414   0012E6  6ADA               	clrf	fsr2h,c
  1415   0012E8  30DF               	rrcf	223,w,c
  1416   0012EA  32E8               	rrcf	wreg,f,c
  1417   0012EC  32E8               	rrcf	wreg,f,c
  1418   0012EE  0B07               	andlw	7
  1419   0012F0  6E26               	movwf	??_gpio_pin_direction_initialize^0,c
  1420   0012F2  0E01               	movlw	1
  1421   0012F4  6E27               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1422   0012F6  2A26               	incf	??_gpio_pin_direction_initialize^0,f,c
  1423   0012F8  EF80  F009         	goto	u774
  1424   0012FC                     u775:
  1425   0012FC  90D8               	bcf	status,0,c
  1426   0012FE  3627               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1427   001300                     u774:
  1428   001300  2E26               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1429   001302  EF7E  F009         	goto	u775
  1430   001306  5025               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1431   001308  6ED9               	movwf	fsr2l,c
  1432   00130A  6ADA               	clrf	fsr2h,c
  1433   00130C  50DF               	movf	223,w,c
  1434   00130E  0B07               	andlw	7
  1435   001310  0D02               	mullw	2
  1436   001312  50F3               	movf	243,w,c
  1437   001314  0F0B               	addlw	low _tris_registers
  1438   001316  6ED9               	movwf	fsr2l,c
  1439   001318  6ADA               	clrf	fsr2h,c
  1440   00131A  CFDE F028          	movff	postinc2,??_gpio_pin_direction_initialize+2
  1441   00131E  CFDD F029          	movff	postdec2,??_gpio_pin_direction_initialize+3
  1442   001322  C028  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  1443   001326  C029  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  1444   00132A  5027               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1445   00132C  12DF               	iorwf	indf2,f,c
  1446                           
  1447                           ;MCAL_Layer/GPIO/hal_gpio.c: 53:                 break;
  1448   00132E  EFDA  F009         	goto	l1491
  1449   001332                     l1483:
  1450                           
  1451                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 (*tris_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  1452   001332  5025               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1453   001334  6ED9               	movwf	fsr2l,c
  1454   001336  6ADA               	clrf	fsr2h,c
  1455   001338  30DF               	rrcf	223,w,c
  1456   00133A  32E8               	rrcf	wreg,f,c
  1457   00133C  32E8               	rrcf	wreg,f,c
  1458   00133E  0B07               	andlw	7
  1459   001340  6E26               	movwf	??_gpio_pin_direction_initialize^0,c
  1460   001342  0E01               	movlw	1
  1461   001344  6E27               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1462   001346  2A26               	incf	??_gpio_pin_direction_initialize^0,f,c
  1463   001348  EFA8  F009         	goto	u784
  1464   00134C                     u785:
  1465   00134C  90D8               	bcf	status,0,c
  1466   00134E  3627               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1467   001350                     u784:
  1468   001350  2E26               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1469   001352  EFA6  F009         	goto	u785
  1470   001356  5027               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1471   001358  0AFF               	xorlw	255
  1472   00135A  6E28               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1473   00135C  5025               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1474   00135E  6ED9               	movwf	fsr2l,c
  1475   001360  6ADA               	clrf	fsr2h,c
  1476   001362  50DF               	movf	223,w,c
  1477   001364  0B07               	andlw	7
  1478   001366  0D02               	mullw	2
  1479   001368  50F3               	movf	243,w,c
  1480   00136A  0F0B               	addlw	low _tris_registers
  1481   00136C  6ED9               	movwf	fsr2l,c
  1482   00136E  6ADA               	clrf	fsr2h,c
  1483   001370  CFDE F029          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1484   001374  CFDD F02A          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1485   001378  C029  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1486   00137C  C02A  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1487   001380  5028               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1488   001382  16DF               	andwf	indf2,f,c
  1489                           
  1490                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 break;
  1491   001384  EFDA  F009         	goto	l1491
  1492   001388                     l1489:
  1493   001388  5025               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1494   00138A  6ED9               	movwf	fsr2l,c
  1495   00138C  6ADA               	clrf	fsr2h,c
  1496   00138E  BCDF               	btfsc	indf2,6,c
  1497   001390  EFCC  F009         	goto	u791
  1498   001394  EFCF  F009         	goto	u790
  1499   001398                     u791:
  1500   001398  0E01               	movlw	1
  1501   00139A  EFD0  F009         	goto	u796
  1502   00139E                     u790:
  1503   00139E  0E00               	movlw	0
  1504   0013A0                     u796:
  1505                           
  1506                           ; Switch size 1, requested type "simple"
  1507                           ; Number of cases is 2, Range of values is 0 to 1
  1508                           ; switch strategies available:
  1509                           ; Name         Instructions Cycles
  1510                           ; simple_byte            7     4 (average)
  1511                           ;	Chosen strategy is simple_byte
  1512   0013A0  0A00               	xorlw	0	; case 0
  1513   0013A2  B4D8               	btfsc	status,2,c
  1514   0013A4  EF99  F009         	goto	l1483
  1515   0013A8  0A01               	xorlw	1	; case 1
  1516   0013AA  B4D8               	btfsc	status,2,c
  1517   0013AC  EF71  F009         	goto	l1481
  1518   0013B0  EF6D  F009         	goto	l1479
  1519   0013B4                     l1491:
  1520                           
  1521                           ;MCAL_Layer/GPIO/hal_gpio.c: 62:     return (ret);
  1522   0013B4  502B               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1523   0013B6  0012               	return		;funcret
  1524   0013B8                     __end_of_gpio_pin_direction_initialize:
  1525                           	callstack 0
  1526                           
  1527                           	psect	smallconst
  1528   001000                     __psmallconst:
  1529                           	callstack 0
  1530   001000  00                 	db	0
  1531   001001  00                 	db	0	; dummy byte at the end
  1532   000000                     
  1533                           	psect	rparam
  1534   000000                     tosu	equ	0xFFF
  1535                           tosh	equ	0xFFE
  1536                           tosl	equ	0xFFD
  1537                           stkptr	equ	0xFFC
  1538                           pclatu	equ	0xFFB
  1539                           pclath	equ	0xFFA
  1540                           pcl	equ	0xFF9
  1541                           tblptru	equ	0xFF8
  1542                           tblptrh	equ	0xFF7
  1543                           tblptrl	equ	0xFF6
  1544                           tablat	equ	0xFF5
  1545                           prodh	equ	0xFF4
  1546                           prodl	equ	0xFF3
  1547                           indf0	equ	0xFEF
  1548                           postinc0	equ	0xFEE
  1549                           postdec0	equ	0xFED
  1550                           preinc0	equ	0xFEC
  1551                           plusw0	equ	0xFEB
  1552                           fsr0h	equ	0xFEA
  1553                           fsr0l	equ	0xFE9
  1554                           wreg	equ	0xFE8
  1555                           indf1	equ	0xFE7
  1556                           postinc1	equ	0xFE6
  1557                           postdec1	equ	0xFE5
  1558                           preinc1	equ	0xFE4
  1559                           plusw1	equ	0xFE3
  1560                           fsr1h	equ	0xFE2
  1561                           fsr1l	equ	0xFE1
  1562                           bsr	equ	0xFE0
  1563                           indf2	equ	0xFDF
  1564                           postinc2	equ	0xFDE
  1565                           postdec2	equ	0xFDD
  1566                           preinc2	equ	0xFDC
  1567                           plusw2	equ	0xFDB
  1568                           fsr2h	equ	0xFDA
  1569                           fsr2l	equ	0xFD9
  1570                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        36
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      69
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    dc_motor_initialize@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_backward@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_forward@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_stop@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    gpio_pin_direction_initialize@_pin_config_t	PTR const struct . size(1) Largest target is 1
		 -> led_intitialize@pin(COMRAM[1]), motor_pin1(COMRAM[1]), motor_pin2(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config_t	PTR struct . size(1) Largest target is 1
		 -> led_intitialize@pin(COMRAM[1]), motor_pin1(COMRAM[1]), motor_pin2(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config_t	PTR struct . size(1) Largest target is 1
		 -> led_intitialize@pin(COMRAM[1]), led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), motor_pin1(COMRAM[1]), 
		 -> motor_pin2(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRhl[1]), LATC(BITBIGSFRhl[1]), LATD(BITBIGSFRhl[1]), 
		 -> LATE(BITBIGSFRhl[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRlh[1]), PORTC(BITBIGSFRlh[1]), PORTD(BITBIGSFRlh[1]), 
		 -> PORTE(BITBIGSFRlh[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRhl[1]), TRISB(BITBIGSFRhh[1]), TRISC(BITBIGSFRhh[1]), TRISD(BITBIGSFRhh[1]), 
		 -> TRISE(BITBIGSFRhh[1]), 


Critical Paths under _main in COMRAM

    _main->_application_initialize
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_forward->_gpio_pin_write_logic
    _dc_motor_move_backward->_gpio_pin_write_logic
    _application_initialize->_dc_motor_initialize
    _dc_motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9972
                                             14 COMRAM     3     3      0
             _application_initialize
             _dc_motor_move_backward
              _dc_motor_move_forward
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    2289
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_forward                                2     1      1    2289
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_backward                               2     1      1    2289
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0    3070
                                             13 COMRAM     1     1      0
                _dc_motor_initialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  3     2      1    3045
                                             10 COMRAM     3     2      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  3     2      1    2715
                                              8 COMRAM     2     1      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    1939
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _dc_motor_initialize
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
   _dc_motor_move_backward
     _gpio_pin_write_logic
   _dc_motor_move_forward
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRhh         69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      45       1       72.6%
BITBIGSFRll         20      0       0      39        0.0%
BITBIGSFRlh          4      0       0      38        0.0%
BITBIGSFRhl          4      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      40        0.0%
DATA                 0      0      45       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 24 15:21:55 2024

                       ??_dc_motor_move_backward 002E                                               l62 147A  
                                             l72 1586                                               l67 154E  
                                             l77 1516                  button_read_state@btn_high_valid 0038  
                                            l205 13B6                                              l224 117A  
                                            l193 14DE                                              l295 15F6  
                                            l289 12A2                                              u800 1016  
                                            u801 1012                                              u810 1036  
                                            u811 1032                                              u750 12BA  
                                            u751 12B6                                              u760 12DA  
                                            u920 152C                                              u761 12D6  
                                            u825 104C                                              u905 1414  
                                            u921 1528                                              u834 1070  
                                            u826 104E                                              u930 1564  
                                            u835 106C                                              u915 1464  
                                            u907 1416                                              u931 1560  
                                            u844 10C0                                              u860 148C  
                                            u940 14F4                                              u845 10BC  
                                            u861 1488                                              u917 1466  
                                            u941 14F0                                              u790 139E  
                                            u774 1300                                              u854 1116  
                                            u870 14AC                                              u791 1398  
                                            u775 12FC                                              u855 1112  
                                            u871 14A8                                              u784 1350  
                                            u880 14C8                                              u785 134C  
                                            u881 14C4                                              u890 13CC  
                                            u891 13C8                                              u796 13A0  
                                            wreg 0FE8                            relay_initialize@F3150 003C  
                                           l1501 103E                                             l1503 1052  
                                           l1505 10A2                                             l1513 114E  
                                           l1507 10F8                                             l1515 1178  
                                           l1531 14C8                                             l1523 147C  
                                           l1525 148C                                             l1541 1406  
                                           l1527 14AC                                             l1551 1466  
                                           l1543 1416                                             l1535 13B8  
                                           l1481 12E2                                             l1529 14B0  
                                           l1553 1468                                             l1545 1418  
                                           l1537 13CC                                             l1561 1518  
                                           l1483 1332                                             l1491 13B4  
                                           l1475 12A6                                             l1555 1470  
                                           l1547 1432                                             l1539 13D4  
                                           l1635 15E2                                             l1571 1550  
                                           l1563 152C                                             l1731 117C  
                                           l1477 12BA                                             l1549 1452  
                                           l1557 1478                                             l1637 15E2  
                                           l1573 1564                                             l1565 1534  
                                           l1581 14E0                                             l1741 11C4  
                                           l1733 1182                                             l1479 12DA  
                                           l1495 1002                                             l1639 15EA  
                                           l1575 156C                                             l1567 154C  
                                           l1583 14F4                                             l1751 1224  
                                           l1743 11CC                                             l1489 1388  
                                           l1497 1016                                             l1577 1584  
                                           l1585 14FC                                             l1761 1284  
                                           l1753 122C                                             l1745 11D4  
                                           l1737 1196                                             l1499 1036  
                                           l1587 1514                                             l1755 125A  
                                           l1747 1202                                             l1739 11AA  
                                           l1757 1274                                             l1749 121C  
                                           l1791 1162                                             l1759 127C  
                                           u1140 1192                                             u1141 118E  
                                           u1207 1264                                             u1217 128E  
                                           _LATA 0F89                                             _LATB 0F8A  
                                           u1167 11B4                                             _LATC 0F8B  
                                           _LATD 0F8C                                             u1177 11DE  
                                           _LATE 0F8D                                             u1187 120C  
                                           u1197 1236                                             _main 117C  
                                           fsr2h 0FDA                                             indf2 0FDF  
                                           fsr1l 0FE1                                             fsr2l 0FD9  
                                           prodl 0FF3                                             start 0000  
               gpio_pin_initialize@_pin_config_t 002D                                     ___param_bank 0000  
                         dc_motor_initialize@ret 0031                             _gpio_pin_write_logic 1002  
                                          ?_main 0025                         ??_application_initialize 0032  
                            relay_turn_off@F3160 003A                                            _PORTA 0F80  
                                          _PORTB 0F81                                            _PORTC 0F82  
                                          _PORTD 0F83                                            _PORTE 0F84  
                                          _TRISA 0F92                                            _TRISB 0F93  
                                          _TRISC 0F94                                            _TRISD 0F95  
                                          _TRISE 0F96  btn_high_magic_button@btn_high_last_valid_status 0043  
                 dc_motor_move_backward@dc_motor 002D                                            tablat 0FF5  
                                          status 0FD8                   ?_gpio_pin_direction_initialize 0025  
                                __initialization 1588                            _dc_motor_move_forward 1518  
                                   __end_of_main 12A6                            ?_gpio_pin_write_logic 0025  
                                  _lat_registers 0015                      __end_of_dc_motor_initialize 147C  
                                         ??_main 0033                                    __activetblptr 0002  
                               led_turn_on@F3165 003F                    dc_motor_move_forward@dc_motor 002D  
                                         clear_0 15AE                                           _relay1 0024  
                                         _relay2 0023                                           isa$std 0001  
                                   __pdataCOMRAM 0001                                     __mediumconst 0000  
                                         tblptrh 0FF7                                           tblptrl 0FF6  
                                         tblptru 0FF8                           _dc_motor_move_backward 1550  
                                     __accesstop 0060                          __end_of__initialization 15B4  
                                  ___rparam_used 0001                           ?_dc_motor_move_forward 002D  
                         ??_gpio_pin_write_logic 0027                                   __pcstackCOMRAM 0025  
                       dc_motor_move_forward@ret 002E                                       _dc_motor_1 0021  
                                     _dc_motor_2 001F                           _application_initialize 15E2  
                              led_turn_off@F3170 003E                                  led_toggle@F3175 003D  
                                 _tris_registers 000B                                          __Hparam 0000  
                                        __Lparam 0000                              _gpio_pin_initialize 147C  
                                   __psmallconst 1000                                          __pcinit 1588  
                           led_intitialize@F3160 0040                                          __ramtop 1000  
                                        __ptext0 117C                                          __ptext1 14E0  
                                        __ptext2 1518                                          __ptext3 1550  
                                        __ptext4 15E2                                          __ptext5 13B8  
                                        __ptext6 147C                                          __ptext7 1002  
                                        __ptext8 12A6                  ??_gpio_pin_direction_initialize 0026  
                           ?_gpio_pin_initialize 002D                                          main@ret 0035  
                           end_of_initialization 15B4                                    __Lmediumconst 0000  
              gpio_pin_write_logic@_pin_config_t 0025                                    _dc_motor_stop 14E0  
                                        postdec1 0FE5                                          postdec2 0FDD  
                                        postinc0 0FEE                                          postinc2 0FDE  
                                     _motor_pin1 0045                                       _motor_pin2 0044  
                        ?_dc_motor_move_backward 002D                            ??_gpio_pin_initialize 002E  
                        ??_dc_motor_move_forward 002E                                   ?_dc_motor_stop 002D  
                             relay_turn_on@F3155 003B                                    __pidataCOMRAM 15BE  
                               turn_on_leds@_POS 0041                   button_read_state@btn_low_valid 0036  
                 __end_of_dc_motor_move_backward 1588                              start_initialization 1588  
          __end_of_gpio_pin_direction_initialize 13B8                    _gpio_pin_direction_initialize 12A6  
                        ?_application_initialize 0025                                 dc_motor_stop@ret 002E  
                                    __pbssCOMRAM 0036                  btn_high_magic_button@led_status 0042  
                 __end_of_application_initialize 15F8                                  ??_dc_motor_stop 002E  
                      dc_motor_move_backward@ret 002E                        gpio_pin_write_logic@logic 0026  
                                    __smallconst 1000                              _dc_motor_initialize 13B8  
               gpio_pin_direction_initialize@ret 002B       gpio_pin_direction_initialize@_pin_config_t 0025  
                           ?_dc_motor_initialize 002F                          gpio_pin_write_logic@ret 002C  
                                      copy_data0 159C                    __end_of_dc_motor_move_forward 1550  
                                       __Hrparam 0000                                         __Lrparam 0000  
                          dc_motor_stop@dc_motor 002D                      __end_of_gpio_pin_initialize 14E0  
                          ??_dc_motor_initialize 0030                                         isa$xinst 0000  
                    dc_motor_initialize@dc_motor 002F                     __end_of_gpio_pin_write_logic 117C  
                      application_initialize@ret 0032                                   _port_registers 0001  
                          __end_of_dc_motor_stop 1518  
