

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 24 18:59:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22   000000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F46K20 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   00152A                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _port_registers
    63   00152A  80                 	db	128
    64   00152B  0F                 	db	15
    65   00152C  81                 	db	129
    66   00152D  0F                 	db	15
    67   00152E  82                 	db	130
    68   00152F  0F                 	db	15
    69   001530  83                 	db	131
    70   001531  0F                 	db	15
    71   001532  84                 	db	132
    72   001533  0F                 	db	15
    73                           
    74                           ;initializer for _tris_registers
    75   001534  92                 	db	146
    76   001535  0F                 	db	15
    77   001536  93                 	db	147
    78   001537  0F                 	db	15
    79   001538  94                 	db	148
    80   001539  0F                 	db	15
    81   00153A  95                 	db	149
    82   00153B  0F                 	db	15
    83   00153C  96                 	db	150
    84   00153D  0F                 	db	15
    85                           
    86                           ;initializer for _lat_registers
    87   00153E  89                 	db	137
    88   00153F  0F                 	db	15
    89   001540  8A                 	db	138
    90   001541  0F                 	db	15
    91   001542  8B                 	db	139
    92   001543  0F                 	db	15
    93   001544  8C                 	db	140
    94   001545  0F                 	db	15
    95   001546  8D                 	db	141
    96   001547  0F                 	db	15
    97                           
    98                           ;initializer for _btn_high
    99   001548  52                 	db	82
   100   001549  00                 	db	0
   101   00154A  00                 	db	0
   102                           
   103                           ;initializer for _btn_low
   104   00154B  C3                 	db	195
   105   00154C  00                 	db	0
   106   00154D  01                 	db	1
   107                           
   108                           ;initializer for _dc_motor_2
   109   00154E  12                 	db	18
   110   00154F  1A                 	db	26
   111                           
   112                           ;initializer for _dc_motor_1
   113   001550  02                 	db	2
   114   001551  0A                 	db	10
   115                           
   116                           ;initializer for _led2
   117   001552  12                 	db	18
   118                           
   119                           ;initializer for _led1
   120   001553  02                 	db	2
   121                           
   122                           ;initializer for _relay2
   123   001554  12                 	db	18
   124                           
   125                           ;initializer for _relay1
   126   001555  02                 	db	2
   127   000000                     _PORTA	set	3968
   128   000000                     _LATA	set	3977
   129   000000                     _TRISA	set	3986
   130   000000                     _LATE	set	3981
   131   000000                     _LATD	set	3980
   132   000000                     _LATC	set	3979
   133   000000                     _LATB	set	3978
   134   000000                     _TRISE	set	3990
   135   000000                     _TRISD	set	3989
   136   000000                     _TRISC	set	3988
   137   000000                     _TRISB	set	3987
   138   000000                     _PORTE	set	3972
   139   000000                     _PORTD	set	3971
   140   000000                     _PORTC	set	3970
   141   000000                     _PORTB	set	3969
   142                           
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146   0014C4                     __pcinit:
   147                           	callstack 0
   148   0014C4                     start_initialization:
   149                           	callstack 0
   150   0014C4                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (44 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155   0014C4  0E2A               	movlw	low __pidataCOMRAM
   156   0014C6  6EF6               	movwf	tblptrl,c
   157   0014C8  0E15               	movlw	high __pidataCOMRAM
   158   0014CA  6EF7               	movwf	tblptrh,c
   159   0014CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160   0014CE  6EF8               	movwf	tblptru,c
   161   0014D0  EE00  F001         	lfsr	0,__pdataCOMRAM
   162   0014D4  EE10 F02C          	lfsr	1,44
   163   0014D8                     copy_data0:
   164   0014D8  0009               	tblrd		*+
   165   0014DA  CFF5 FFEE          	movff	tablat,postinc0
   166   0014DE  50E5               	movf	postdec1,w,c
   167   0014E0  50E1               	movf	fsr1l,w,c
   168   0014E2  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to COMRAM (21 bytes)
   171   0014E4  EE00  F02D         	lfsr	0,__pbssCOMRAM
   172   0014E8  0E15               	movlw	21
   173   0014EA                     clear_0:
   174   0014EA  6AEE               	clrf	postinc0,c
   175   0014EC  06E8               	decf	wreg,f,c
   176   0014EE  E1FD               	bnz	clear_0
   177   0014F0                     end_of_initialization:
   178                           	callstack 0
   179   0014F0                     __end_of__initialization:
   180                           	callstack 0
   181   0014F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   182   0014F2  6EF8               	movwf	tblptru,c
   183   0014F4  0100               	movlb	0
   184   0014F6  EFBE  F008         	goto	_main	;jump to C main() function
   185                           
   186                           	psect	bssCOMRAM
   187   00002D                     __pbssCOMRAM:
   188                           	callstack 0
   189   00002D                     	ds	6
   190   000033                     button_read_state@btn_low_valid:
   191                           	callstack 0
   192   000033                     	ds	2
   193   000035                     button_read_state@btn_high_valid:
   194                           	callstack 0
   195   000035                     	ds	2
   196   000037                     	ds	1
   197   000038                     relay_turn_off@F3160:
   198                           	callstack 0
   199   000038                     	ds	1
   200   000039                     relay_turn_on@F3155:
   201                           	callstack 0
   202   000039                     	ds	1
   203   00003A                     relay_initialize@F3150:
   204                           	callstack 0
   205   00003A                     	ds	1
   206   00003B                     led_toggle@F3175:
   207                           	callstack 0
   208   00003B                     	ds	1
   209   00003C                     led_turn_off@F3170:
   210                           	callstack 0
   211   00003C                     	ds	1
   212   00003D                     led_turn_on@F3165:
   213                           	callstack 0
   214   00003D                     	ds	1
   215   00003E                     led_intitialize@F3160:
   216                           	callstack 0
   217   00003E                     	ds	1
   218   00003F                     turn_on_leds@_POS:
   219                           	callstack 0
   220   00003F                     	ds	1
   221   000040                     btn_high_magic_button@led_status:
   222                           	callstack 0
   223   000040                     	ds	1
   224   000041                     btn_high_magic_button@btn_high_last_valid_status:
   225                           	callstack 0
   226   000041                     	ds	1
   227                           
   228                           	psect	dataCOMRAM
   229   000001                     __pdataCOMRAM:
   230                           	callstack 0
   231   000001                     _port_registers:
   232                           	callstack 0
   233   000001                     	ds	10
   234   00000B                     _tris_registers:
   235                           	callstack 0
   236   00000B                     	ds	10
   237   000015                     _lat_registers:
   238                           	callstack 0
   239   000015                     	ds	10
   240   00001F                     _btn_high:
   241                           	callstack 0
   242   00001F                     	ds	3
   243   000022                     _btn_low:
   244                           	callstack 0
   245   000022                     	ds	3
   246   000025                     _dc_motor_2:
   247                           	callstack 0
   248   000025                     	ds	2
   249   000027                     _dc_motor_1:
   250                           	callstack 0
   251   000027                     	ds	2
   252   000029                     _led2:
   253                           	callstack 0
   254   000029                     	ds	1
   255   00002A                     _led1:
   256                           	callstack 0
   257   00002A                     	ds	1
   258   00002B                     _relay2:
   259                           	callstack 0
   260   00002B                     	ds	1
   261   00002C                     _relay1:
   262                           	callstack 0
   263   00002C                     	ds	1
   264                           
   265                           	psect	cstackCOMRAM
   266   000042                     __pcstackCOMRAM:
   267                           	callstack 0
   268   000042                     gpio_pin_direction_initialize@_pin_config_t:
   269                           	callstack 0
   270   000042                     gpio_pin_write_logic@_pin_config_t:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x0
   274   000042                     	ds	1
   275   000043                     ??_gpio_pin_direction_initialize:
   276   000043                     gpio_pin_write_logic@logic:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x1
   280   000043                     	ds	1
   281   000044                     ??_gpio_pin_write_logic:
   282                           
   283                           ; 1 bytes @ 0x2
   284   000044                     	ds	4
   285   000048                     gpio_pin_direction_initialize@ret:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x6
   289   000048                     	ds	1
   290   000049                     gpio_pin_write_logic@ret:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x7
   294   000049                     	ds	1
   295   00004A                     dc_motor_move_forward@dc_motor:
   296                           	callstack 0
   297   00004A                     dc_motor_move_backward@dc_motor:
   298                           	callstack 0
   299   00004A                     dc_motor_stop@dc_motor:
   300                           	callstack 0
   301   00004A                     gpio_pin_initialize@_pin_config_t:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x8
   305   00004A                     	ds	1
   306   00004B                     ??_gpio_pin_initialize:
   307   00004B                     dc_motor_move_forward@ret:
   308                           	callstack 0
   309   00004B                     dc_motor_move_backward@ret:
   310                           	callstack 0
   311   00004B                     dc_motor_stop@ret:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x9
   315   00004B                     	ds	1
   316   00004C                     dc_motor_initialize@dc_motor:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0xA
   320   00004C                     	ds	1
   321   00004D                     dc_motor_initialize@ret:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0xB
   325   00004D                     	ds	1
   326   00004E                     application_initialize@ret:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0xC
   330   00004E                     	ds	1
   331   00004F                     ??_main:
   332                           
   333                           ; 1 bytes @ 0xD
   334   00004F                     	ds	2
   335   000051                     main@ret:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0xF
   339   000051                     	ds	1
   340                           
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 35 in file "app.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  ret             1   15[COMRAM] unsigned char 
   351 ;; Return value:  Size  Location     Type
   352 ;;                  2  283[None  ] int 
   353 ;; Registers used:
   354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;Total ram usage:        3 bytes
   365 ;; Hardware stack levels required when called: 4
   366 ;; This function calls:
   367 ;;		_application_initialize
   368 ;;		_dc_motor_move_backward
   369 ;;		_dc_motor_move_forward
   370 ;;		_dc_motor_stop
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text0
   377   00117C                     __ptext0:
   378                           	callstack 0
   379   00117C                     _main:
   380                           	callstack 27
   381   00117C                     
   382                           ;app.c: 37:     Std_ReturnType ret = application_initialize();
   383   00117C  ECAB  F00A         	call	_application_initialize	;wreg free
   384   001180  6E51               	movwf	main@ret^0,c
   385   001182                     
   386                           ;app.c: 38:     if ((Std_ReturnType)0x01u == ret)
   387   001182  0451               	decf	main@ret^0,w,c
   388   001184  A4D8               	btfss	status,2,c
   389   001186  EFC7  F008         	goto	u1141
   390   00118A  EFC9  F008         	goto	u1140
   391   00118E                     u1141:
   392   00118E  EFCB  F008         	goto	l1908
   393   001192                     u1140:
   394   001192  EF51  F009         	goto	l285
   395   001196                     l1908:
   396                           
   397                           ;app.c: 43:     {;app.c: 44:         ret = dc_motor_move_forward(&dc_motor_1);
   398   001196  0E27               	movlw	low _dc_motor_1
   399   001198  6E4A               	movwf	dc_motor_move_forward@dc_motor^0,c
   400   00119A  EC2A  F00A         	call	_dc_motor_move_forward	;wreg free
   401   00119E  6E51               	movwf	main@ret^0,c
   402                           
   403                           ;app.c: 45:         ret = dc_motor_move_forward(&dc_motor_2);
   404   0011A0  0E25               	movlw	low _dc_motor_2
   405   0011A2  6E4A               	movwf	dc_motor_move_forward@dc_motor^0,c
   406   0011A4  EC2A  F00A         	call	_dc_motor_move_forward	;wreg free
   407   0011A8  6E51               	movwf	main@ret^0,c
   408   0011AA                     
   409                           ;app.c: 46:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   410   0011AA  0E1F               	movlw	31
   411   0011AC  6E50               	movwf	(??_main+1)^0,c
   412   0011AE  0E71               	movlw	113
   413   0011B0  6E4F               	movwf	??_main^0,c
   414   0011B2  0E1E               	movlw	30
   415   0011B4                     u1207:
   416   0011B4  2EE8               	decfsz	wreg,f,c
   417   0011B6  D7FE               	bra	u1207
   418   0011B8  2E4F               	decfsz	??_main^0,f,c
   419   0011BA  D7FC               	bra	u1207
   420   0011BC  2E50               	decfsz	(??_main+1)^0,f,c
   421   0011BE  D7FA               	bra	u1207
   422   0011C0  F000 F000          	nop2	
   423   0011C4  0E27               	movlw	low _dc_motor_1
   424   0011C6  6E4A               	movwf	dc_motor_move_backward@dc_motor^0,c
   425   0011C8  EC46  F00A         	call	_dc_motor_move_backward	;wreg free
   426   0011CC  0E25               	movlw	low _dc_motor_2
   427   0011CE  6E4A               	movwf	dc_motor_move_backward@dc_motor^0,c
   428   0011D0  EC46  F00A         	call	_dc_motor_move_backward	;wreg free
   429   0011D4                     
   430                           ;app.c: 49:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   431   0011D4  0E1F               	movlw	31
   432   0011D6  6E50               	movwf	(??_main+1)^0,c
   433   0011D8  0E71               	movlw	113
   434   0011DA  6E4F               	movwf	??_main^0,c
   435   0011DC  0E1E               	movlw	30
   436   0011DE                     u1217:
   437   0011DE  2EE8               	decfsz	wreg,f,c
   438   0011E0  D7FE               	bra	u1217
   439   0011E2  2E4F               	decfsz	??_main^0,f,c
   440   0011E4  D7FC               	bra	u1217
   441   0011E6  2E50               	decfsz	(??_main+1)^0,f,c
   442   0011E8  D7FA               	bra	u1217
   443   0011EA  F000 F000          	nop2	
   444                           
   445                           ;app.c: 50:         ret = dc_motor_stop(&dc_motor_1);
   446   0011EE  0E27               	movlw	low _dc_motor_1
   447   0011F0  6E4A               	movwf	dc_motor_stop@dc_motor^0,c
   448   0011F2  EC0E  F00A         	call	_dc_motor_stop	;wreg free
   449   0011F6  6E51               	movwf	main@ret^0,c
   450                           
   451                           ;app.c: 51:         ret = dc_motor_stop(&dc_motor_2);
   452   0011F8  0E25               	movlw	low _dc_motor_2
   453   0011FA  6E4A               	movwf	dc_motor_stop@dc_motor^0,c
   454   0011FC  EC0E  F00A         	call	_dc_motor_stop	;wreg free
   455   001200  6E51               	movwf	main@ret^0,c
   456   001202                     
   457                           ;app.c: 52:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   458   001202  0E1F               	movlw	31
   459   001204  6E50               	movwf	(??_main+1)^0,c
   460   001206  0E71               	movlw	113
   461   001208  6E4F               	movwf	??_main^0,c
   462   00120A  0E1E               	movlw	30
   463   00120C                     u1227:
   464   00120C  2EE8               	decfsz	wreg,f,c
   465   00120E  D7FE               	bra	u1227
   466   001210  2E4F               	decfsz	??_main^0,f,c
   467   001212  D7FC               	bra	u1227
   468   001214  2E50               	decfsz	(??_main+1)^0,f,c
   469   001216  D7FA               	bra	u1227
   470   001218  F000 F000          	nop2	
   471   00121C  0E27               	movlw	low _dc_motor_1
   472   00121E  6E4A               	movwf	dc_motor_move_forward@dc_motor^0,c
   473   001220  EC2A  F00A         	call	_dc_motor_move_forward	;wreg free
   474   001224  0E25               	movlw	low _dc_motor_2
   475   001226  6E4A               	movwf	dc_motor_move_backward@dc_motor^0,c
   476   001228  EC46  F00A         	call	_dc_motor_move_backward	;wreg free
   477   00122C                     
   478                           ;app.c: 55:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   479   00122C  0E1F               	movlw	31
   480   00122E  6E50               	movwf	(??_main+1)^0,c
   481   001230  0E71               	movlw	113
   482   001232  6E4F               	movwf	??_main^0,c
   483   001234  0E1E               	movlw	30
   484   001236                     u1237:
   485   001236  2EE8               	decfsz	wreg,f,c
   486   001238  D7FE               	bra	u1237
   487   00123A  2E4F               	decfsz	??_main^0,f,c
   488   00123C  D7FC               	bra	u1237
   489   00123E  2E50               	decfsz	(??_main+1)^0,f,c
   490   001240  D7FA               	bra	u1237
   491   001242  F000 F000          	nop2	
   492                           
   493                           ;app.c: 56:         ret = dc_motor_stop(&dc_motor_1);
   494   001246  0E27               	movlw	low _dc_motor_1
   495   001248  6E4A               	movwf	dc_motor_stop@dc_motor^0,c
   496   00124A  EC0E  F00A         	call	_dc_motor_stop	;wreg free
   497   00124E  6E51               	movwf	main@ret^0,c
   498                           
   499                           ;app.c: 57:         ret = dc_motor_stop(&dc_motor_2);
   500   001250  0E25               	movlw	low _dc_motor_2
   501   001252  6E4A               	movwf	dc_motor_stop@dc_motor^0,c
   502   001254  EC0E  F00A         	call	_dc_motor_stop	;wreg free
   503   001258  6E51               	movwf	main@ret^0,c
   504   00125A                     
   505                           ;app.c: 58:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   506   00125A  0E1F               	movlw	31
   507   00125C  6E50               	movwf	(??_main+1)^0,c
   508   00125E  0E71               	movlw	113
   509   001260  6E4F               	movwf	??_main^0,c
   510   001262  0E1E               	movlw	30
   511   001264                     u1247:
   512   001264  2EE8               	decfsz	wreg,f,c
   513   001266  D7FE               	bra	u1247
   514   001268  2E4F               	decfsz	??_main^0,f,c
   515   00126A  D7FC               	bra	u1247
   516   00126C  2E50               	decfsz	(??_main+1)^0,f,c
   517   00126E  D7FA               	bra	u1247
   518   001270  F000 F000          	nop2	
   519   001274  0E27               	movlw	low _dc_motor_1
   520   001276  6E4A               	movwf	dc_motor_move_backward@dc_motor^0,c
   521   001278  EC46  F00A         	call	_dc_motor_move_backward	;wreg free
   522   00127C  0E25               	movlw	low _dc_motor_2
   523   00127E  6E4A               	movwf	dc_motor_move_forward@dc_motor^0,c
   524   001280  EC2A  F00A         	call	_dc_motor_move_forward	;wreg free
   525   001284                     
   526                           ;app.c: 61:         _delay((unsigned long)((3000)*((8 *1000UL *1000UL)/4000.0)));
   527   001284  0E1F               	movlw	31
   528   001286  6E50               	movwf	(??_main+1)^0,c
   529   001288  0E71               	movlw	113
   530   00128A  6E4F               	movwf	??_main^0,c
   531   00128C  0E1E               	movlw	30
   532   00128E                     u1257:
   533   00128E  2EE8               	decfsz	wreg,f,c
   534   001290  D7FE               	bra	u1257
   535   001292  2E4F               	decfsz	??_main^0,f,c
   536   001294  D7FC               	bra	u1257
   537   001296  2E50               	decfsz	(??_main+1)^0,f,c
   538   001298  D7FA               	bra	u1257
   539   00129A  F000 F000          	nop2	
   540   00129E  EFCB  F008         	goto	l1908
   541   0012A2                     l285:
   542   0012A2  EF00  F000         	goto	start
   543   0012A6                     __end_of_main:
   544                           	callstack 0
   545                           
   546 ;; *************** function _dc_motor_stop *****************
   547 ;; Defined at:
   548 ;;		line 79 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   551 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  ret             1    9[COMRAM] unsigned char 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      unsigned char 
   556 ;; Registers used:
   557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   563 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;Total ram usage:        2 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; Hardware stack levels required when called: 1
   570 ;; This function calls:
   571 ;;		_gpio_pin_write_logic
   572 ;; This function is called by:
   573 ;;		_main
   574 ;;		_dc_motor_test
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text1
   579   00141C                     __ptext1:
   580                           	callstack 0
   581   00141C                     _dc_motor_stop:
   582                           	callstack 29
   583   00141C                     
   584                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 79: Std_ReturnType dc_motor_stop(const dc_motor_t *d
      +                          c_motor);ECU_Layer/DC_Motor/ecu_dc_motor.c: 80: {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 81:
      +                               Std_ReturnType ret = (Std_ReturnType)0x00u;
   585   00141C  0E00               	movlw	0
   586   00141E  6E4B               	movwf	dc_motor_stop@ret^0,c
   587                           
   588                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 83:     if (((void*)0) == dc_motor)
   589   001420  504A               	movf	dc_motor_stop@dc_motor^0,w,c
   590   001422  A4D8               	btfss	status,2,c
   591   001424  EF16  F00A         	goto	u991
   592   001428  EF18  F00A         	goto	u990
   593   00142C                     u991:
   594   00142C  EF1C  F00A         	goto	l1798
   595   001430                     u990:
   596   001430                     
   597                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 84:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 85:    
      +                               ret = (Std_ReturnType)0x01u;
   598   001430  0E01               	movlw	1
   599   001432  6E4B               	movwf	dc_motor_stop@ret^0,c
   600                           
   601                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 86:     }
   602   001434  EF28  F00A         	goto	l1800
   603   001438                     l1798:
   604                           
   605                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 88:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 89:    
      +                               gpio_pin_write_logic(&(dc_motor->dc_motor_pins[0x00U]), GPIO_LOW);
   606   001438  C04A  F042         	movff	dc_motor_stop@dc_motor,gpio_pin_write_logic@_pin_config_t
   607   00143C  0E00               	movlw	0
   608   00143E  6E43               	movwf	gpio_pin_write_logic@logic^0,c
   609   001440  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   610                           
   611                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 90:         gpio_pin_write_logic(&(dc_motor->dc_moto
      +                          r_pins[0x01U]), GPIO_LOW);
   612   001444  284A               	incf	dc_motor_stop@dc_motor^0,w,c
   613   001446  6E42               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   614   001448  0E00               	movlw	0
   615   00144A  6E43               	movwf	gpio_pin_write_logic@logic^0,c
   616   00144C  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   617   001450                     l1800:
   618                           
   619                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 92:     return (ret);
   620   001450  504B               	movf	dc_motor_stop@ret^0,w,c
   621   001452  0012               	return		;funcret
   622   001454                     __end_of_dc_motor_stop:
   623                           	callstack 0
   624                           
   625 ;; *************** function _dc_motor_move_forward *****************
   626 ;; Defined at:
   627 ;;		line 36 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   630 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  ret             1    9[COMRAM] unsigned char 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      unsigned char 
   635 ;; Registers used:
   636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   642 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;Total ram usage:        2 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; Hardware stack levels required when called: 1
   649 ;; This function calls:
   650 ;;		_gpio_pin_write_logic
   651 ;; This function is called by:
   652 ;;		_main
   653 ;;		_dc_motor_test
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text2
   658   001454                     __ptext2:
   659                           	callstack 0
   660   001454                     _dc_motor_move_forward:
   661                           	callstack 29
   662   001454                     
   663                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 36: Std_ReturnType dc_motor_move_forward(const dc_mo
      +                          tor_t *dc_motor);ECU_Layer/DC_Motor/ecu_dc_motor.c: 37: {;ECU_Layer/DC_Motor/ecu_dc_moto
      +                          r.c: 38:     Std_ReturnType ret = (Std_ReturnType)0x00u;
   664   001454  0E00               	movlw	0
   665   001456  6E4B               	movwf	dc_motor_move_forward@ret^0,c
   666                           
   667                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 40:     if (((void*)0) == dc_motor)
   668   001458  504A               	movf	dc_motor_move_forward@dc_motor^0,w,c
   669   00145A  A4D8               	btfss	status,2,c
   670   00145C  EF32  F00A         	goto	u971
   671   001460  EF34  F00A         	goto	u970
   672   001464                     u971:
   673   001464  EF38  F00A         	goto	l1778
   674   001468                     u970:
   675   001468                     
   676                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 41:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 42:    
      +                               ret = (Std_ReturnType)0x01u;
   677   001468  0E01               	movlw	1
   678   00146A  6E4B               	movwf	dc_motor_move_forward@ret^0,c
   679                           
   680                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:     }
   681   00146C  EF44  F00A         	goto	l1780
   682   001470                     l1778:
   683                           
   684                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 46:    
      +                               gpio_pin_write_logic(&(dc_motor->dc_motor_pins[0x00U]), GPIO_HIGH);
   685   001470  C04A  F042         	movff	dc_motor_move_forward@dc_motor,gpio_pin_write_logic@_pin_config_t
   686   001474  0E01               	movlw	1
   687   001476  6E43               	movwf	gpio_pin_write_logic@logic^0,c
   688   001478  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   689                           
   690                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 47:         gpio_pin_write_logic(&(dc_motor->dc_moto
      +                          r_pins[0x01U]), GPIO_LOW);
   691   00147C  284A               	incf	dc_motor_move_forward@dc_motor^0,w,c
   692   00147E  6E42               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   693   001480  0E00               	movlw	0
   694   001482  6E43               	movwf	gpio_pin_write_logic@logic^0,c
   695   001484  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   696   001488                     l1780:
   697                           
   698                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 49:     return (ret);
   699   001488  504B               	movf	dc_motor_move_forward@ret^0,w,c
   700   00148A  0012               	return		;funcret
   701   00148C                     __end_of_dc_motor_move_forward:
   702                           	callstack 0
   703                           
   704 ;; *************** function _dc_motor_move_backward *****************
   705 ;; Defined at:
   706 ;;		line 57 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  dc_motor        1    8[COMRAM] PTR const struct .
   709 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  ret             1    9[COMRAM] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      unsigned char 
   714 ;; Registers used:
   715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   721 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;Total ram usage:        2 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 1
   728 ;; This function calls:
   729 ;;		_gpio_pin_write_logic
   730 ;; This function is called by:
   731 ;;		_main
   732 ;;		_dc_motor_test
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text3
   737   00148C                     __ptext3:
   738                           	callstack 0
   739   00148C                     _dc_motor_move_backward:
   740                           	callstack 29
   741   00148C                     
   742                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 57: Std_ReturnType dc_motor_move_backward(const dc_m
      +                          otor_t *dc_motor);ECU_Layer/DC_Motor/ecu_dc_motor.c: 58: {;ECU_Layer/DC_Motor/ecu_dc_mot
      +                          or.c: 59:     Std_ReturnType ret = (Std_ReturnType)0x00u;
   743   00148C  0E00               	movlw	0
   744   00148E  6E4B               	movwf	dc_motor_move_backward@ret^0,c
   745                           
   746                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 61:     if (((void*)0) == dc_motor)
   747   001490  504A               	movf	dc_motor_move_backward@dc_motor^0,w,c
   748   001492  A4D8               	btfss	status,2,c
   749   001494  EF4E  F00A         	goto	u981
   750   001498  EF50  F00A         	goto	u980
   751   00149C                     u981:
   752   00149C  EF54  F00A         	goto	l1788
   753   0014A0                     u980:
   754   0014A0                     
   755                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 62:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 63:    
      +                               ret = (Std_ReturnType)0x01u;
   756   0014A0  0E01               	movlw	1
   757   0014A2  6E4B               	movwf	dc_motor_move_backward@ret^0,c
   758                           
   759                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 64:     }
   760   0014A4  EF60  F00A         	goto	l1790
   761   0014A8                     l1788:
   762                           
   763                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 66:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 68:    
      +                               gpio_pin_write_logic(&(dc_motor->dc_motor_pins[0x00U]), GPIO_LOW);
   764   0014A8  C04A  F042         	movff	dc_motor_move_backward@dc_motor,gpio_pin_write_logic@_pin_config_t
   765   0014AC  0E00               	movlw	0
   766   0014AE  6E43               	movwf	gpio_pin_write_logic@logic^0,c
   767   0014B0  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   768                           
   769                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 69:         gpio_pin_write_logic(&(dc_motor->dc_moto
      +                          r_pins[0x01U]), GPIO_HIGH);
   770   0014B4  284A               	incf	dc_motor_move_backward@dc_motor^0,w,c
   771   0014B6  6E42               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   772   0014B8  0E01               	movlw	1
   773   0014BA  6E43               	movwf	gpio_pin_write_logic@logic^0,c
   774   0014BC  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   775   0014C0                     l1790:
   776                           
   777                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 71:     return (ret);
   778   0014C0  504B               	movf	dc_motor_move_backward@ret^0,w,c
   779   0014C2  0012               	return		;funcret
   780   0014C4                     __end_of_dc_motor_move_backward:
   781                           	callstack 0
   782                           
   783 ;; *************** function _application_initialize *****************
   784 ;; Defined at:
   785 ;;		line 65 in file "app.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  ret             1   12[COMRAM] unsigned char 
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      unsigned char 
   792 ;; Registers used:
   793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;Total ram usage:        1 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; Hardware stack levels required when called: 3
   806 ;; This function calls:
   807 ;;		_dc_motor_initialize
   808 ;; This function is called by:
   809 ;;		_main
   810 ;;		_dc_motor_test
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text4
   815   001556                     __ptext4:
   816                           	callstack 0
   817   001556                     _application_initialize:
   818                           	callstack 27
   819   001556  0E27               	movlw	low _dc_motor_1
   820   001558  6E4C               	movwf	dc_motor_initialize@dc_motor^0,c
   821   00155A  EC7D  F00A         	call	_dc_motor_initialize	;wreg free
   822   00155E                     
   823                           ;app.c: 69:     ret = dc_motor_initialize(&dc_motor_2);
   824   00155E  0E25               	movlw	low _dc_motor_2
   825   001560  6E4C               	movwf	dc_motor_initialize@dc_motor^0,c
   826   001562  EC7D  F00A         	call	_dc_motor_initialize	;wreg free
   827   001566  6E4E               	movwf	application_initialize@ret^0,c
   828                           
   829                           ;app.c: 72:     return (ret);
   830   001568  504E               	movf	application_initialize@ret^0,w,c
   831   00156A  0012               	return		;funcret
   832   00156C                     __end_of_application_initialize:
   833                           	callstack 0
   834                           
   835 ;; *************** function _dc_motor_initialize *****************
   836 ;; Defined at:
   837 ;;		line 15 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  dc_motor        1   10[COMRAM] PTR const struct .
   840 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  ret             1   11[COMRAM] unsigned char 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      unsigned char 
   845 ;; Registers used:
   846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   852 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;Total ram usage:        2 bytes
   857 ;; Hardware stack levels used: 1
   858 ;; Hardware stack levels required when called: 2
   859 ;; This function calls:
   860 ;;		_gpio_pin_initialize
   861 ;; This function is called by:
   862 ;;		_application_initialize
   863 ;;		_dc_motorapplication_initialize
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text5
   868   0014FA                     __ptext5:
   869                           	callstack 0
   870   0014FA                     _dc_motor_initialize:
   871                           	callstack 27
   872   0014FA                     
   873                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 15: Std_ReturnType dc_motor_initialize(const dc_moto
      +                          r_t *dc_motor);ECU_Layer/DC_Motor/ecu_dc_motor.c: 16: {;ECU_Layer/DC_Motor/ecu_dc_motor.
      +                          c: 17:     Std_ReturnType ret = (Std_ReturnType)0x00u;
   874   0014FA  0E00               	movlw	0
   875   0014FC  6E4D               	movwf	dc_motor_initialize@ret^0,c
   876                           
   877                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 19:     if (((void*)0) == dc_motor)
   878   0014FE  504C               	movf	dc_motor_initialize@dc_motor^0,w,c
   879   001500  A4D8               	btfss	status,2,c
   880   001502  EF85  F00A         	goto	u911
   881   001506  EF87  F00A         	goto	u910
   882   00150A                     u911:
   883   00150A  EF8B  F00A         	goto	l1730
   884   00150E                     u910:
   885   00150E                     
   886                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 21:    
      +                               ret = (Std_ReturnType)0x01u;
   887   00150E  0E01               	movlw	1
   888   001510  6E4D               	movwf	dc_motor_initialize@ret^0,c
   889                           
   890                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 22:     }
   891   001512  EF93  F00A         	goto	l1732
   892   001516                     l1730:
   893                           
   894                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 24:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 25:    
      +                               gpio_pin_initialize(&(dc_motor->dc_motor_pins[0x00U]));
   895   001516  C04C  F04A         	movff	dc_motor_initialize@dc_motor,gpio_pin_initialize@_pin_config_t
   896   00151A  ECDC  F009         	call	_gpio_pin_initialize	;wreg free
   897                           
   898                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:         gpio_pin_initialize(&(dc_motor->dc_motor
      +                          _pins[0x01U]));
   899   00151E  284C               	incf	dc_motor_initialize@dc_motor^0,w,c
   900   001520  6E4A               	movwf	gpio_pin_initialize@_pin_config_t^0,c
   901   001522  ECDC  F009         	call	_gpio_pin_initialize	;wreg free
   902   001526                     l1732:
   903                           
   904                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 28:     return (ret);
   905   001526  504D               	movf	dc_motor_initialize@ret^0,w,c
   906   001528  0012               	return		;funcret
   907   00152A                     __end_of_dc_motor_initialize:
   908                           	callstack 0
   909                           
   910 ;; *************** function _gpio_pin_initialize *****************
   911 ;; Defined at:
   912 ;;		line 17 in file "MCAL_Layer/GPIO/hal_gpio.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  _pin_config_    1    8[COMRAM] PTR struct .
   915 ;;		 -> dc_motor_2$dc_motor_pins(2), dc_motor_2(2), dc_motor_1$dc_motor_pins(2), dc_motor_1(2), 
   916 ;;		 -> relay_initialize@pin_obj(1), led_intitialize@pin(1), 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  ret             1    0        unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      unsigned char 
   921 ;; Registers used:
   922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   928 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;Total ram usage:        2 bytes
   933 ;; Hardware stack levels used: 1
   934 ;; Hardware stack levels required when called: 1
   935 ;; This function calls:
   936 ;;		_gpio_pin_direction_initialize
   937 ;;		_gpio_pin_write_logic
   938 ;; This function is called by:
   939 ;;		_dc_motor_initialize
   940 ;;		_led_intitialize
   941 ;;		_relay_initialize
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text6
   946   0013B8                     __ptext6:
   947                           	callstack 0
   948   0013B8                     _gpio_pin_initialize:
   949                           	callstack 27
   950   0013B8                     
   951                           ;MCAL_Layer/GPIO/hal_gpio.c: 20:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
   952   0013B8  504A               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
   953   0013BA  B4D8               	btfsc	status,2,c
   954   0013BC  EFE2  F009         	goto	u881
   955   0013C0  EFE4  F009         	goto	u880
   956   0013C4                     u881:
   957   0013C4  EFF4  F009         	goto	l1718
   958   0013C8                     u880:
   959   0013C8  504A               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
   960   0013CA  6ED9               	movwf	fsr2l,c
   961   0013CC  6ADA               	clrf	fsr2h,c
   962   0013CE  30DF               	rrcf	223,w,c
   963   0013D0  32E8               	rrcf	wreg,f,c
   964   0013D2  32E8               	rrcf	wreg,f,c
   965   0013D4  0B07               	andlw	7
   966   0013D6  6E4B               	movwf	??_gpio_pin_initialize^0,c
   967   0013D8  0E07               	movlw	7
   968   0013DA  644B               	cpfsgt	??_gpio_pin_initialize^0,c
   969   0013DC  EFF2  F009         	goto	u891
   970   0013E0  EFF4  F009         	goto	u890
   971   0013E4                     u891:
   972   0013E4  EFF6  F009         	goto	l1720
   973   0013E8                     u890:
   974   0013E8                     l1718:
   975                           
   976                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     }
   977   0013E8  EF0D  F00A         	goto	l189
   978   0013EC                     l1720:
   979                           
   980                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     {;MCAL_Layer/GPIO/hal_gpio.c: 26:         if (ret =
      +                          = gpio_pin_direction_initialize(_pin_config_t))
   981   0013EC  C04A  F042         	movff	gpio_pin_initialize@_pin_config_t,gpio_pin_direction_initialize@_pin_config_t
   982   0013F0  EC53  F009         	call	_gpio_pin_direction_initialize	;wreg free
   983   0013F4  0900               	iorlw	0
   984   0013F6  A4D8               	btfss	status,2,c
   985   0013F8  EF00  F00A         	goto	u901
   986   0013FC  EF02  F00A         	goto	u900
   987   001400                     u901:
   988   001400  EF0D  F00A         	goto	l189
   989   001404                     u900:
   990   001404  C04A  F042         	movff	gpio_pin_initialize@_pin_config_t,gpio_pin_write_logic@_pin_config_t
   991   001408  504A               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
   992   00140A  6ED9               	movwf	fsr2l,c
   993   00140C  6ADA               	clrf	fsr2h,c
   994   00140E  0E00               	movlw	0
   995   001410  BEDF               	btfsc	indf2,7,c
   996   001412  0E01               	movlw	1
   997   001414  6E43               	movwf	gpio_pin_write_logic@logic^0,c
   998   001416  EC01  F008         	call	_gpio_pin_write_logic	;wreg free
   999   00141A                     l189:
  1000   00141A  0012               	return		;funcret
  1001   00141C                     __end_of_gpio_pin_initialize:
  1002                           	callstack 0
  1003                           
  1004 ;; *************** function _gpio_pin_write_logic *****************
  1005 ;; Defined at:
  1006 ;;		line 96 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  _pin_config_    1    0[COMRAM] PTR struct .
  1009 ;;		 -> dc_motor_2$dc_motor_pins(2), dc_motor_2(2), dc_motor_1$dc_motor_pins(2), dc_motor_1(2), 
  1010 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin(1), 
  1011 ;;		 -> led_turn_on@pin(1), led_intitialize@pin(1), 
  1012 ;;  logic           1    1[COMRAM] enum E3076
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  ret             1    7[COMRAM] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      unsigned char 
  1017 ;; Registers used:
  1018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;Total ram usage:        8 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		_dc_motor_move_forward
  1034 ;;		_dc_motor_move_backward
  1035 ;;		_dc_motor_stop
  1036 ;;		_gpio_pin_initialize
  1037 ;;		_led_turn_on
  1038 ;;		_led_turn_off
  1039 ;;		_relay_turn_on
  1040 ;;		_relay_turn_off
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text7
  1045   001002                     __ptext7:
  1046                           	callstack 0
  1047   001002                     _gpio_pin_write_logic:
  1048                           	callstack 29
  1049   001002                     
  1050                           ;MCAL_Layer/GPIO/hal_gpio.c: 96: Std_ReturnType gpio_pin_write_logic(pin_config_t *_pin_
      +                          config_t, logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 97: {;MCAL_Layer/GPIO/hal_gpio.c: 9
      +                          8:     Std_ReturnType ret = (Std_ReturnType)0x00u;
  1051   001002  0E00               	movlw	0
  1052   001004  6E49               	movwf	gpio_pin_write_logic@ret^0,c
  1053                           
  1054                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  1055   001006  5042               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1056   001008  B4D8               	btfsc	status,2,c
  1057   00100A  EF09  F008         	goto	u821
  1058   00100E  EF0B  F008         	goto	u820
  1059   001012                     u821:
  1060   001012  EF1B  F008         	goto	l1690
  1061   001016                     u820:
  1062   001016  5042               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1063   001018  6ED9               	movwf	fsr2l,c
  1064   00101A  6ADA               	clrf	fsr2h,c
  1065   00101C  30DF               	rrcf	223,w,c
  1066   00101E  32E8               	rrcf	wreg,f,c
  1067   001020  32E8               	rrcf	wreg,f,c
  1068   001022  0B07               	andlw	7
  1069   001024  6E44               	movwf	??_gpio_pin_write_logic^0,c
  1070   001026  0E07               	movlw	7
  1071   001028  6444               	cpfsgt	??_gpio_pin_write_logic^0,c
  1072   00102A  EF19  F008         	goto	u831
  1073   00102E  EF1B  F008         	goto	u830
  1074   001032                     u831:
  1075   001032  EF1F  F008         	goto	l1692
  1076   001036                     u830:
  1077   001036                     l1690:
  1078                           
  1079                           ;MCAL_Layer/GPIO/hal_gpio.c: 100:     {;MCAL_Layer/GPIO/hal_gpio.c: 101:         ret = (
      +                          Std_ReturnType)0x01u;
  1080   001036  0E01               	movlw	1
  1081   001038  6E49               	movwf	gpio_pin_write_logic@ret^0,c
  1082                           
  1083                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:     }
  1084   00103A  EFBC  F008         	goto	l1706
  1085   00103E                     l1692:
  1086                           
  1087                           ;MCAL_Layer/GPIO/hal_gpio.c: 104:     {;MCAL_Layer/GPIO/hal_gpio.c: 105:         _pin_co
      +                          nfig_t->logic = logic;
  1088   00103E  5042               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1089   001040  6ED9               	movwf	fsr2l,c
  1090   001042  6ADA               	clrf	fsr2h,c
  1091   001044  B043               	btfsc	gpio_pin_write_logic@logic^0,0,c
  1092   001046  D002               	bra	u845
  1093   001048  9EDF               	bcf	indf2,7,c
  1094   00104A  D001               	bra	u846
  1095   00104C                     u845:
  1096   00104C  8EDF               	bsf	indf2,7,c
  1097   00104E                     u846:
  1098                           
  1099                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:         switch (logic)
  1100   00104E  EFA7  F008         	goto	l1704
  1101   001052                     l1694:
  1102                           
  1103                           ;MCAL_Layer/GPIO/hal_gpio.c: 109:                 (*lat_registers[_pin_config_t->port] |
      +                          = ((uint8)1 << _pin_config_t->pin));
  1104   001052  5042               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1105   001054  6ED9               	movwf	fsr2l,c
  1106   001056  6ADA               	clrf	fsr2h,c
  1107   001058  30DF               	rrcf	223,w,c
  1108   00105A  32E8               	rrcf	wreg,f,c
  1109   00105C  32E8               	rrcf	wreg,f,c
  1110   00105E  0B07               	andlw	7
  1111   001060  6E44               	movwf	??_gpio_pin_write_logic^0,c
  1112   001062  0E01               	movlw	1
  1113   001064  6E45               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1114   001066  2A44               	incf	??_gpio_pin_write_logic^0,f,c
  1115   001068  EF38  F008         	goto	u854
  1116   00106C                     u855:
  1117   00106C  90D8               	bcf	status,0,c
  1118   00106E  3645               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1119   001070                     u854:
  1120   001070  2E44               	decfsz	??_gpio_pin_write_logic^0,f,c
  1121   001072  EF36  F008         	goto	u855
  1122   001076  5042               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1123   001078  6ED9               	movwf	fsr2l,c
  1124   00107A  6ADA               	clrf	fsr2h,c
  1125   00107C  50DF               	movf	223,w,c
  1126   00107E  0B07               	andlw	7
  1127   001080  0D02               	mullw	2
  1128   001082  50F3               	movf	243,w,c
  1129   001084  0F15               	addlw	low _lat_registers
  1130   001086  6ED9               	movwf	fsr2l,c
  1131   001088  6ADA               	clrf	fsr2h,c
  1132   00108A  CFDE F046          	movff	postinc2,??_gpio_pin_write_logic+2
  1133   00108E  CFDD F047          	movff	postdec2,??_gpio_pin_write_logic+3
  1134   001092  C046  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1135   001096  C047  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1136   00109A  5045               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1137   00109C  12DF               	iorwf	indf2,f,c
  1138                           
  1139                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:                 break;
  1140   00109E  EFBC  F008         	goto	l1706
  1141   0010A2                     l1696:
  1142                           
  1143                           ;MCAL_Layer/GPIO/hal_gpio.c: 112:                 (*lat_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  1144   0010A2  5042               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1145   0010A4  6ED9               	movwf	fsr2l,c
  1146   0010A6  6ADA               	clrf	fsr2h,c
  1147   0010A8  30DF               	rrcf	223,w,c
  1148   0010AA  32E8               	rrcf	wreg,f,c
  1149   0010AC  32E8               	rrcf	wreg,f,c
  1150   0010AE  0B07               	andlw	7
  1151   0010B0  6E44               	movwf	??_gpio_pin_write_logic^0,c
  1152   0010B2  0E01               	movlw	1
  1153   0010B4  6E45               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1154   0010B6  2A44               	incf	??_gpio_pin_write_logic^0,f,c
  1155   0010B8  EF60  F008         	goto	u864
  1156   0010BC                     u865:
  1157   0010BC  90D8               	bcf	status,0,c
  1158   0010BE  3645               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1159   0010C0                     u864:
  1160   0010C0  2E44               	decfsz	??_gpio_pin_write_logic^0,f,c
  1161   0010C2  EF5E  F008         	goto	u865
  1162   0010C6  5045               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1163   0010C8  0AFF               	xorlw	255
  1164   0010CA  6E46               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1165   0010CC  5042               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1166   0010CE  6ED9               	movwf	fsr2l,c
  1167   0010D0  6ADA               	clrf	fsr2h,c
  1168   0010D2  50DF               	movf	223,w,c
  1169   0010D4  0B07               	andlw	7
  1170   0010D6  0D02               	mullw	2
  1171   0010D8  50F3               	movf	243,w,c
  1172   0010DA  0F15               	addlw	low _lat_registers
  1173   0010DC  6ED9               	movwf	fsr2l,c
  1174   0010DE  6ADA               	clrf	fsr2h,c
  1175   0010E0  CFDE F047          	movff	postinc2,??_gpio_pin_write_logic+3
  1176   0010E4  CFDD F048          	movff	postdec2,??_gpio_pin_write_logic+4
  1177   0010E8  C047  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1178   0010EC  C048  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1179   0010F0  5046               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1180   0010F2  16DF               	andwf	indf2,f,c
  1181                           
  1182                           ;MCAL_Layer/GPIO/hal_gpio.c: 113:                 break;
  1183   0010F4  EFBC  F008         	goto	l1706
  1184   0010F8                     l1698:
  1185                           
  1186                           ;MCAL_Layer/GPIO/hal_gpio.c: 115:                 (*lat_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  1187   0010F8  5042               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1188   0010FA  6ED9               	movwf	fsr2l,c
  1189   0010FC  6ADA               	clrf	fsr2h,c
  1190   0010FE  30DF               	rrcf	223,w,c
  1191   001100  32E8               	rrcf	wreg,f,c
  1192   001102  32E8               	rrcf	wreg,f,c
  1193   001104  0B07               	andlw	7
  1194   001106  6E44               	movwf	??_gpio_pin_write_logic^0,c
  1195   001108  0E01               	movlw	1
  1196   00110A  6E45               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1197   00110C  2A44               	incf	??_gpio_pin_write_logic^0,f,c
  1198   00110E  EF8B  F008         	goto	u874
  1199   001112                     u875:
  1200   001112  90D8               	bcf	status,0,c
  1201   001114  3645               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1202   001116                     u874:
  1203   001116  2E44               	decfsz	??_gpio_pin_write_logic^0,f,c
  1204   001118  EF89  F008         	goto	u875
  1205   00111C  5045               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1206   00111E  0AFF               	xorlw	255
  1207   001120  6E46               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1208   001122  5042               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1209   001124  6ED9               	movwf	fsr2l,c
  1210   001126  6ADA               	clrf	fsr2h,c
  1211   001128  50DF               	movf	223,w,c
  1212   00112A  0B07               	andlw	7
  1213   00112C  0D02               	mullw	2
  1214   00112E  50F3               	movf	243,w,c
  1215   001130  0F15               	addlw	low _lat_registers
  1216   001132  6ED9               	movwf	fsr2l,c
  1217   001134  6ADA               	clrf	fsr2h,c
  1218   001136  CFDE F047          	movff	postinc2,??_gpio_pin_write_logic+3
  1219   00113A  CFDD F048          	movff	postdec2,??_gpio_pin_write_logic+4
  1220   00113E  C047  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1221   001142  C048  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1222   001146  5046               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1223   001148  16DF               	andwf	indf2,f,c
  1224   00114A  EF1B  F008         	goto	l1690
  1225   00114E                     l1704:
  1226   00114E  5043               	movf	gpio_pin_write_logic@logic^0,w,c
  1227   001150  6E44               	movwf	??_gpio_pin_write_logic^0,c
  1228   001152  6A45               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1229                           
  1230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1231                           ; Switch size 1, requested type "simple"
  1232                           ; Number of cases is 1, Range of values is 0 to 0
  1233                           ; switch strategies available:
  1234                           ; Name         Instructions Cycles
  1235                           ; simple_byte            4     3 (average)
  1236                           ;	Chosen strategy is simple_byte
  1237   001154  5045               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1238   001156  0A00               	xorlw	0	; case 0
  1239   001158  B4D8               	btfsc	status,2,c
  1240   00115A  EFB1  F008         	goto	l2072
  1241   00115E  EF7C  F008         	goto	l1698
  1242   001162                     l2072:
  1243                           
  1244                           ; Switch size 1, requested type "simple"
  1245                           ; Number of cases is 2, Range of values is 0 to 1
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte            7     4 (average)
  1249                           ;	Chosen strategy is simple_byte
  1250   001162  5044               	movf	??_gpio_pin_write_logic^0,w,c
  1251   001164  0A00               	xorlw	0	; case 0
  1252   001166  B4D8               	btfsc	status,2,c
  1253   001168  EF51  F008         	goto	l1696
  1254   00116C  0A01               	xorlw	1	; case 1
  1255   00116E  B4D8               	btfsc	status,2,c
  1256   001170  EF29  F008         	goto	l1694
  1257   001174  EF7C  F008         	goto	l1698
  1258   001178                     l1706:
  1259                           
  1260                           ;MCAL_Layer/GPIO/hal_gpio.c: 120:     return (ret);
  1261   001178  5049               	movf	gpio_pin_write_logic@ret^0,w,c
  1262   00117A  0012               	return		;funcret
  1263   00117C                     __end_of_gpio_pin_write_logic:
  1264                           	callstack 0
  1265                           
  1266 ;; *************** function _gpio_pin_direction_initialize *****************
  1267 ;; Defined at:
  1268 ;;		line 39 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  _pin_config_    1    0[COMRAM] PTR const struct .
  1271 ;;		 -> btn_high(3), btn_low(3), dc_motor_2$dc_motor_pins(2), dc_motor_2(2), 
  1272 ;;		 -> dc_motor_1$dc_motor_pins(2), dc_motor_1(2), relay_initialize@pin_obj(1), led_intitialize@pin(1), 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  ret             1    6[COMRAM] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      unsigned char 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1284 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;Total ram usage:        7 bytes
  1289 ;; Hardware stack levels used: 1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_gpio_pin_initialize
  1294 ;;		_button_initialize
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text8
  1299   0012A6                     __ptext8:
  1300                           	callstack 0
  1301   0012A6                     _gpio_pin_direction_initialize:
  1302                           	callstack 27
  1303   0012A6                     
  1304                           ;MCAL_Layer/GPIO/hal_gpio.c: 39: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t *_pin_config_t);MCAL_Layer/GPIO/hal_gpio.c: 40: {;MCAL_Layer/GPIO/hal_gpio.c: 4
      +                          1:     Std_ReturnType ret = (Std_ReturnType)0x00u;
  1305   0012A6  0E00               	movlw	0
  1306   0012A8  6E48               	movwf	gpio_pin_direction_initialize@ret^0,c
  1307                           
  1308                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  1309   0012AA  5042               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1310   0012AC  B4D8               	btfsc	status,2,c
  1311   0012AE  EF5B  F009         	goto	u771
  1312   0012B2  EF5D  F009         	goto	u770
  1313   0012B6                     u771:
  1314   0012B6  EF6D  F009         	goto	l1670
  1315   0012BA                     u770:
  1316   0012BA  5042               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1317   0012BC  6ED9               	movwf	fsr2l,c
  1318   0012BE  6ADA               	clrf	fsr2h,c
  1319   0012C0  30DF               	rrcf	223,w,c
  1320   0012C2  32E8               	rrcf	wreg,f,c
  1321   0012C4  32E8               	rrcf	wreg,f,c
  1322   0012C6  0B07               	andlw	7
  1323   0012C8  6E43               	movwf	??_gpio_pin_direction_initialize^0,c
  1324   0012CA  0E07               	movlw	7
  1325   0012CC  6443               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1326   0012CE  EF6B  F009         	goto	u781
  1327   0012D2  EF6D  F009         	goto	u780
  1328   0012D6                     u781:
  1329   0012D6  EFC4  F009         	goto	l1680
  1330   0012DA                     u780:
  1331   0012DA                     l1670:
  1332                           
  1333                           ;MCAL_Layer/GPIO/hal_gpio.c: 44:     {;MCAL_Layer/GPIO/hal_gpio.c: 45:         ret = (St
      +                          d_ReturnType)0x01u;
  1334   0012DA  0E01               	movlw	1
  1335   0012DC  6E48               	movwf	gpio_pin_direction_initialize@ret^0,c
  1336                           
  1337                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     }
  1338   0012DE  EFDA  F009         	goto	l1682
  1339   0012E2                     l1672:
  1340                           
  1341                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 (*tris_registers[_pin_config_t->port] |
      +                          = ((uint8)1 << _pin_config_t->pin));
  1342   0012E2  5042               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1343   0012E4  6ED9               	movwf	fsr2l,c
  1344   0012E6  6ADA               	clrf	fsr2h,c
  1345   0012E8  30DF               	rrcf	223,w,c
  1346   0012EA  32E8               	rrcf	wreg,f,c
  1347   0012EC  32E8               	rrcf	wreg,f,c
  1348   0012EE  0B07               	andlw	7
  1349   0012F0  6E43               	movwf	??_gpio_pin_direction_initialize^0,c
  1350   0012F2  0E01               	movlw	1
  1351   0012F4  6E44               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1352   0012F6  2A43               	incf	??_gpio_pin_direction_initialize^0,f,c
  1353   0012F8  EF80  F009         	goto	u794
  1354   0012FC                     u795:
  1355   0012FC  90D8               	bcf	status,0,c
  1356   0012FE  3644               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1357   001300                     u794:
  1358   001300  2E43               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1359   001302  EF7E  F009         	goto	u795
  1360   001306  5042               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1361   001308  6ED9               	movwf	fsr2l,c
  1362   00130A  6ADA               	clrf	fsr2h,c
  1363   00130C  50DF               	movf	223,w,c
  1364   00130E  0B07               	andlw	7
  1365   001310  0D02               	mullw	2
  1366   001312  50F3               	movf	243,w,c
  1367   001314  0F0B               	addlw	low _tris_registers
  1368   001316  6ED9               	movwf	fsr2l,c
  1369   001318  6ADA               	clrf	fsr2h,c
  1370   00131A  CFDE F045          	movff	postinc2,??_gpio_pin_direction_initialize+2
  1371   00131E  CFDD F046          	movff	postdec2,??_gpio_pin_direction_initialize+3
  1372   001322  C045  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  1373   001326  C046  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  1374   00132A  5044               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1375   00132C  12DF               	iorwf	indf2,f,c
  1376                           
  1377                           ;MCAL_Layer/GPIO/hal_gpio.c: 53:                 break;
  1378   00132E  EFDA  F009         	goto	l1682
  1379   001332                     l1674:
  1380                           
  1381                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 (*tris_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  1382   001332  5042               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1383   001334  6ED9               	movwf	fsr2l,c
  1384   001336  6ADA               	clrf	fsr2h,c
  1385   001338  30DF               	rrcf	223,w,c
  1386   00133A  32E8               	rrcf	wreg,f,c
  1387   00133C  32E8               	rrcf	wreg,f,c
  1388   00133E  0B07               	andlw	7
  1389   001340  6E43               	movwf	??_gpio_pin_direction_initialize^0,c
  1390   001342  0E01               	movlw	1
  1391   001344  6E44               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1392   001346  2A43               	incf	??_gpio_pin_direction_initialize^0,f,c
  1393   001348  EFA8  F009         	goto	u804
  1394   00134C                     u805:
  1395   00134C  90D8               	bcf	status,0,c
  1396   00134E  3644               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1397   001350                     u804:
  1398   001350  2E43               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1399   001352  EFA6  F009         	goto	u805
  1400   001356  5044               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1401   001358  0AFF               	xorlw	255
  1402   00135A  6E45               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1403   00135C  5042               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1404   00135E  6ED9               	movwf	fsr2l,c
  1405   001360  6ADA               	clrf	fsr2h,c
  1406   001362  50DF               	movf	223,w,c
  1407   001364  0B07               	andlw	7
  1408   001366  0D02               	mullw	2
  1409   001368  50F3               	movf	243,w,c
  1410   00136A  0F0B               	addlw	low _tris_registers
  1411   00136C  6ED9               	movwf	fsr2l,c
  1412   00136E  6ADA               	clrf	fsr2h,c
  1413   001370  CFDE F046          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1414   001374  CFDD F047          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1415   001378  C046  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1416   00137C  C047  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1417   001380  5045               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1418   001382  16DF               	andwf	indf2,f,c
  1419                           
  1420                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 break;
  1421   001384  EFDA  F009         	goto	l1682
  1422   001388                     l1680:
  1423   001388  5042               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  1424   00138A  6ED9               	movwf	fsr2l,c
  1425   00138C  6ADA               	clrf	fsr2h,c
  1426   00138E  BCDF               	btfsc	indf2,6,c
  1427   001390  EFCC  F009         	goto	u811
  1428   001394  EFCF  F009         	goto	u810
  1429   001398                     u811:
  1430   001398  0E01               	movlw	1
  1431   00139A  EFD0  F009         	goto	u816
  1432   00139E                     u810:
  1433   00139E  0E00               	movlw	0
  1434   0013A0                     u816:
  1435                           
  1436                           ; Switch size 1, requested type "simple"
  1437                           ; Number of cases is 2, Range of values is 0 to 1
  1438                           ; switch strategies available:
  1439                           ; Name         Instructions Cycles
  1440                           ; simple_byte            7     4 (average)
  1441                           ;	Chosen strategy is simple_byte
  1442   0013A0  0A00               	xorlw	0	; case 0
  1443   0013A2  B4D8               	btfsc	status,2,c
  1444   0013A4  EF99  F009         	goto	l1674
  1445   0013A8  0A01               	xorlw	1	; case 1
  1446   0013AA  B4D8               	btfsc	status,2,c
  1447   0013AC  EF71  F009         	goto	l1672
  1448   0013B0  EF6D  F009         	goto	l1670
  1449   0013B4                     l1682:
  1450                           
  1451                           ;MCAL_Layer/GPIO/hal_gpio.c: 62:     return (ret);
  1452   0013B4  5048               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1453   0013B6  0012               	return		;funcret
  1454   0013B8                     __end_of_gpio_pin_direction_initialize:
  1455                           	callstack 0
  1456                           
  1457                           	psect	smallconst
  1458   001000                     __psmallconst:
  1459                           	callstack 0
  1460   001000  00                 	db	0
  1461   001001  00                 	db	0	; dummy byte at the end
  1462   000000                     
  1463                           	psect	rparam
  1464   000000                     tosu	equ	0xFFF
  1465                           tosh	equ	0xFFE
  1466                           tosl	equ	0xFFD
  1467                           stkptr	equ	0xFFC
  1468                           pclatu	equ	0xFFB
  1469                           pclath	equ	0xFFA
  1470                           pcl	equ	0xFF9
  1471                           tblptru	equ	0xFF8
  1472                           tblptrh	equ	0xFF7
  1473                           tblptrl	equ	0xFF6
  1474                           tablat	equ	0xFF5
  1475                           prodh	equ	0xFF4
  1476                           prodl	equ	0xFF3
  1477                           indf0	equ	0xFEF
  1478                           postinc0	equ	0xFEE
  1479                           postdec0	equ	0xFED
  1480                           preinc0	equ	0xFEC
  1481                           plusw0	equ	0xFEB
  1482                           fsr0h	equ	0xFEA
  1483                           fsr0l	equ	0xFE9
  1484                           wreg	equ	0xFE8
  1485                           indf1	equ	0xFE7
  1486                           postinc1	equ	0xFE6
  1487                           postdec1	equ	0xFE5
  1488                           preinc1	equ	0xFE4
  1489                           plusw1	equ	0xFE3
  1490                           fsr1h	equ	0xFE2
  1491                           fsr1l	equ	0xFE1
  1492                           bsr	equ	0xFE0
  1493                           indf2	equ	0xFDF
  1494                           postinc2	equ	0xFDE
  1495                           postdec2	equ	0xFDD
  1496                           preinc2	equ	0xFDC
  1497                           plusw2	equ	0xFDB
  1498                           fsr2h	equ	0xFDA
  1499                           fsr2l	equ	0xFD9
  1500                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        44
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      81
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    dc_motor_initialize@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_backward@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_forward@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_stop@dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    funcs	PTR FTN()void [3] size(2) Largest target is 0

    gpio_pin_direction_initialize@_pin_config_t	PTR const struct . size(1) Largest target is 3
		 -> btn_high(COMRAM[3]), btn_low(COMRAM[3]), dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), 
		 -> dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), led_intitialize@pin(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config_t	PTR struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), 
		 -> led_intitialize@pin(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config_t	PTR struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), 
		 -> led_intitialize@pin(COMRAM[1]), led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRhl[1]), LATC(BITBIGSFRhl[1]), LATD(BITBIGSFRhl[1]), 
		 -> LATE(BITBIGSFRhl[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRlh[1]), PORTC(BITBIGSFRlh[1]), PORTD(BITBIGSFRlh[1]), 
		 -> PORTE(BITBIGSFRlh[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRhl[1]), TRISB(BITBIGSFRhh[1]), TRISC(BITBIGSFRhh[1]), TRISD(BITBIGSFRhh[1]), 
		 -> TRISE(BITBIGSFRhh[1]), 


Critical Paths under _main in COMRAM

    _main->_application_initialize
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_forward->_gpio_pin_write_logic
    _dc_motor_move_backward->_gpio_pin_write_logic
    _application_initialize->_dc_motor_initialize
    _dc_motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   11080
                                             13 COMRAM     3     3      0
             _application_initialize
             _dc_motor_move_backward
              _dc_motor_move_forward
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    2637
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_forward                                2     1      1    2637
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_backward                               2     1      1    2637
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0    3134
                                             12 COMRAM     1     1      0
                _dc_motor_initialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  2     1      1    3109
                                             10 COMRAM     2     1      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  3     2      1    2715
                                              8 COMRAM     2     1      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    1939
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _dc_motor_initialize
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
   _dc_motor_move_backward
     _gpio_pin_write_logic
   _dc_motor_move_forward
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRhh         69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      51       1       85.3%
BITBIGSFRll         20      0       0      39        0.0%
BITBIGSFRlh          4      0       0      38        0.0%
BITBIGSFRhl          4      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51      40        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 24 18:59:05 2024

                       ??_dc_motor_move_backward 004B                                               l63 148A  
                                             l73 1452                                               l58 1528  
                                             l68 14C2                  button_read_state@btn_high_valid 0035  
                                            l201 13B6                                              l220 117A  
                                            l291 156A                                              l189 141A  
                                            l285 12A2                                              u810 139E  
                                            u811 1398                                              u804 1350  
                                            u820 1016                                              u900 1404  
                                            u805 134C                                              u821 1012  
                                            u901 1400                                              u830 1036  
                                            u910 150E                                              u831 1032  
                                            u911 150A                                              u816 13A0  
                                            u770 12BA                                              u771 12B6  
                                            u780 12DA                                              u781 12D6  
                                            u845 104C                                              u854 1070  
                                            u846 104E                                              u855 106C  
                                            u864 10C0                                              u880 13C8  
                                            u865 10BC                                              u881 13C4  
                                            u794 1300                                              u874 1116  
                                            u890 13E8                                              u970 1468  
                                            u795 12FC                                              u875 1112  
                                            u891 13E4                                              u971 1464  
                                            u980 14A0                                              u981 149C  
                                            u990 1430                                              u991 142C  
                                            wreg 0FE8                            relay_initialize@F3150 003A  
                                           l2072 1162                                             l1704 114E  
                                           l1720 13EC                                             l1800 1450  
                                           l1706 1178                                             l1722 1404  
                                           l1714 13B8                                             l1730 1516  
                                           l1716 13C8                                             l1732 1526  
                                           l1670 12DA                                             l1718 13E8  
                                           l1726 14FA                                             l1910 11AA  
                                           l1902 117C                                             l1672 12E2  
                                           l1680 1388                                             l1728 150E  
                                           l1920 121C                                             l1912 11C4  
                                           l1904 1182                                             l1674 1332  
                                           l1682 13B4                                             l1666 12A6  
                                           l1690 1036                                             l1930 127C  
                                           l1922 1224                                             l1914 11CC  
                                           l1668 12BA                                             l1692 103E  
                                           l1780 1488                                             l1932 1284  
                                           l1924 122C                                             l1916 11D4  
                                           l1908 1196                                             l1694 1052  
                                           l1686 1002                                             l1790 14C0  
                                           l1774 1454                                             l1926 125A  
                                           l1918 1202                                             l1696 10A2  
                                           l1688 1016                                             l1864 1556  
                                           l1784 148C                                             l1776 1468  
                                           l1928 1274                                             l1698 10F8  
                                           l1866 1556                                             l1786 14A0  
                                           l1778 1470                                             l1794 141C  
                                           l1868 155E                                             l1788 14A8  
                                           l1796 1430                                             l1798 1438  
                                           u1140 1192                                             u1141 118E  
                                           u1207 11B4                                             u1217 11DE  
                                           u1227 120C                                             u1237 1236  
                                           _LATA 0F89                                             _LATB 0F8A  
                                           u1247 1264                                             _LATC 0F8B  
                                           _LATD 0F8C                                             u1257 128E  
                                           _LATE 0F8D                                             _led1 002A  
                                           _led2 0029                                             _main 117C  
                                           fsr2h 0FDA                                             indf2 0FDF  
                                           fsr1l 0FE1                                             fsr2l 0FD9  
                                           prodl 0FF3                                             start 0000  
               gpio_pin_initialize@_pin_config_t 004A                                     ___param_bank 0000  
                         dc_motor_initialize@ret 004D                             _gpio_pin_write_logic 1002  
                                          ?_main 0042                         ??_application_initialize 004E  
                            relay_turn_off@F3160 0038                                            _PORTA 0F80  
                                          _PORTB 0F81                                            _PORTC 0F82  
                                          _PORTD 0F83                                            _PORTE 0F84  
                                          _TRISA 0F92                                            _TRISB 0F93  
                                          _TRISC 0F94                                            _TRISD 0F95  
                                          _TRISE 0F96  btn_high_magic_button@btn_high_last_valid_status 0041  
                 dc_motor_move_backward@dc_motor 004A                                            _count 0037  
                                          _funcs 002D                                            tablat 0FF5  
                                          status 0FD8                   ?_gpio_pin_direction_initialize 0042  
                                __initialization 14C4                            _dc_motor_move_forward 1454  
                                   __end_of_main 12A6                            ?_gpio_pin_write_logic 0042  
                                  _lat_registers 0015                      __end_of_dc_motor_initialize 152A  
                                         ??_main 004F                                    __activetblptr 0002  
                               led_turn_on@F3165 003D                    dc_motor_move_forward@dc_motor 004A  
                                         clear_0 14EA                                           _relay1 002C  
                                         _relay2 002B                                           isa$std 0001  
                                   __pdataCOMRAM 0001                                     __mediumconst 0000  
                                         tblptrh 0FF7                                           tblptrl 0FF6  
                                         tblptru 0FF8                           _dc_motor_move_backward 148C  
                                     __accesstop 0060                          __end_of__initialization 14F0  
                                  ___rparam_used 0001                           ?_dc_motor_move_forward 004A  
                         ??_gpio_pin_write_logic 0044                                   __pcstackCOMRAM 0042  
                       dc_motor_move_forward@ret 004B                                       _dc_motor_1 0027  
                                     _dc_motor_2 0025                           _application_initialize 1556  
                              led_turn_off@F3170 003C                                  led_toggle@F3175 003B  
                                 _tris_registers 000B                                          __Hparam 0000  
                                        __Lparam 0000                              _gpio_pin_initialize 13B8  
                                   __psmallconst 1000                                          __pcinit 14C4  
                           led_intitialize@F3160 003E                                          __ramtop 1000  
                                        __ptext0 117C                                          __ptext1 141C  
                                        __ptext2 1454                                          __ptext3 148C  
                                        __ptext4 1556                                          __ptext5 14FA  
                                        __ptext6 13B8                                          __ptext7 1002  
                                        __ptext8 12A6                                          _btn_low 0022  
                ??_gpio_pin_direction_initialize 0043                             ?_gpio_pin_initialize 004A  
                                        main@ret 0051                             end_of_initialization 14F0  
                                  __Lmediumconst 0000                gpio_pin_write_logic@_pin_config_t 0042  
                                  _dc_motor_stop 141C                                          postdec1 0FE5  
                                        postdec2 0FDD                                          postinc0 0FEE  
                                        postinc2 0FDE                          ?_dc_motor_move_backward 004A  
                          ??_gpio_pin_initialize 004B                          ??_dc_motor_move_forward 004B  
                                 ?_dc_motor_stop 004A                               relay_turn_on@F3155 0039  
                                  __pidataCOMRAM 152A                                 turn_on_leds@_POS 003F  
                 button_read_state@btn_low_valid 0033                   __end_of_dc_motor_move_backward 14C4  
                            start_initialization 14C4            __end_of_gpio_pin_direction_initialize 13B8  
                  _gpio_pin_direction_initialize 12A6                          ?_application_initialize 0042  
                               dc_motor_stop@ret 004B                                      __pbssCOMRAM 002D  
                btn_high_magic_button@led_status 0040                   __end_of_application_initialize 156C  
                                ??_dc_motor_stop 004B                        dc_motor_move_backward@ret 004B  
                      gpio_pin_write_logic@logic 0043                                      __smallconst 1000  
                            _dc_motor_initialize 14FA                 gpio_pin_direction_initialize@ret 0048  
     gpio_pin_direction_initialize@_pin_config_t 0042                             ?_dc_motor_initialize 004C  
                        gpio_pin_write_logic@ret 0049                                        copy_data0 14D8  
                  __end_of_dc_motor_move_forward 148C                                         __Hrparam 0000  
                                       __Lrparam 0000                            dc_motor_stop@dc_motor 004A  
                    __end_of_gpio_pin_initialize 141C                            ??_dc_motor_initialize 004D  
                                       _btn_high 001F                                         isa$xinst 0000  
                    dc_motor_initialize@dc_motor 004C                     __end_of_gpio_pin_write_logic 117C  
                      application_initialize@ret 004E                                   _port_registers 0001  
                          __end_of_dc_motor_stop 1454  
